\ProvidesPackage{dylanadi}
\usepackage{amsmath,amssymb,amsthm}
\usepackage[dvipsnames]{xcolor}
\usepackage{graphicx, pifont}

\usepackage[usestackEOL]{stackengine}
\usepackage{scalerel}

\usepackage{lmodern}
\usepackage[T1]{fontenc}
\usepackage{shapepar}
\usepackage{microtype}
\usepackage{lipsum}
\usepackage{tikz}
\usepackage{natbib}
\usepackage{graphicx}
\usepackage{fontawesome}
\usepackage{paralist}
\RequirePackage[skaknew]{skak}

\DeclareRobustCommand{\alegreyafont}{\fontfamily{Alegreya-LF}\selectfont} % defines alegreya
\DeclareRobustCommand{\notofont}{\fontfamily{NotoSans-TLF}\selectfont}
\DeclareRobustCommand{\merri}{\fontfamily{MerriweatherSans-OsF}\selectfont}


%%fakesection Argument processing
% Default Arguments
% We include "dylanadi" in all of these to make sure
% that they don't collide with anything in external packages
\let\oldding\ding% Store old \ding in \oldding
\renewcommand{\ding}[2][1]{\scalebox{#1}{\oldding{#2}}}

\definecolor{Ylow}{RGB}{248,230,4}

\newcommand\dangersign[1][2ex]{%
  \renewcommand\stacktype{L}%
  \scaleto{\stackon[1.5pt]{\color{red}$\triangle$}{\tiny\bfseries \color{black}{!}}}{#1}%
}

\def\maincolor{BlueViolet} % one color only, no halves and stuff
\newcommand{\changemaincolor}[1]{
    \def\maincolor{#1}
}
\newcommand{\changemaincolorhtml}[1]{
    \definecolor{tempcolor}{HTML}{#1}
    \changemaincolor{tempcolor}
    \changesecondcolor{tempcolor}
}

\def\secondcolor{BlueViolet} % one color only, no halves and stuff
\newcommand{\changesecondcolor}[1]{
    \def\secondcolor{#1}
}
\newcommand{\changesecondcolorhtml}[1]{
    \definecolor{tempcolor2}{HTML}{#1}
    \changesecondcolor{tempcolor2}
}

\newif\ifdylanadifancy\dylanadifancytrue
\newif\ifdylanadihdr\dylanadihdrtrue
\newif\ifdylanadihref\dylanadihreftrue
\newif\ifdylanadisetup\dylanadisetuptrue
\newif\ifdylanadithm\dylanadithmtrue
\newif\ifdylanadisecthm\dylanadisecthmfalse
\newif\ifdylanadiht\dylanadihtfalse
\newif\ifdylanadipkg\dylanadipkgtrue
\newif\ifdylanadipdf\dylanadipdftrue
\newif\ifdylanadiauthor\dylanadiauthortrue
\newif\ifdylanadichinese\dylanadichinesefalse
\newif\ifdylanadimdthm\dylanadimdthmfalse
\newif\ifdylanadidiagrams\dylanadidiagramsfalse
\newif\ifdylanadipatchasy\dylanadipatchasyfalse
\newif\ifdylanadihints\dylanadihintsfalse
\newif\ifdylanadiasy\dylanadiasytrue
\newif\ifdylanadicolorsec\dylanadicolorsecfalse
\newif\ifdylanadititlemark\dylanadititlemarktrue
\newif\ifdylanadinopts\dylanadinoptsfalse
\newif\ifdylanadiretro\dylanadiretrofalse
\newif\ifdylanadicabin\dylanadicabinfalse
\newif\ifdylanadidarkmode\dylanadidarkmodefalse

%Receive Arguments
\DeclareOption{chinese}{\dylanadihreffalse\dylanadichinesetrue} % Chinese support
% allow href to override this one

\DeclareOption{sleek}{\dylanadisecthmtrue\dylanadimdthmtrue\dylanadicolorsectrue} % long docs
\DeclareOption{nopts}{\dylanadinoptstrue}
\DeclareOption{retro}{\dylanadiretrotrue}

\DeclareOption{fancy}{\dylanadifancytrue}
\DeclareOption{nofancy}{\dylanadifancyfalse}
\DeclareOption{hdr}{\dylanadihdrtrue}
\DeclareOption{nohdr}{\dylanadihdrfalse}
\DeclareOption{href}{\dylanadihreftrue}
\DeclareOption{nohref}{\dylanadihreffalse}

\DeclareOption{nosetup}{\dylanadisetupfalse}
\DeclareOption{thm}{\dylanadithmtrue}
\DeclareOption{nothm}{\dylanadithmfalse}
\DeclareOption{secthm}{\dylanadisecthmtrue}
\DeclareOption{nosecthm}{\dylanadisecthmfalse}

\DeclareOption{ht}{\dylanadihttrue}
\DeclareOption{nopdf}{\dylanadipdffalse}
\DeclareOption{nopkg}{\dylanadipkgfalse}
\DeclareOption{noauthor}{\dylanadiauthorfalse}
\DeclareOption{titlemark}{\dylanadititlemarktrue} % Sets title in ohead, not \rightmark
\DeclareOption{sectionmark}{\dylanadititlemarkfalse} % Uses \rightmark not title in ohead

\DeclareOption{mdthm}{\dylanadimdthmtrue}
\DeclareOption{nomdthm}{\dylanadimdthmfalse}
\DeclareOption{diagrams}{\dylanadidiagramstrue}
\DeclareOption{nodiagrams}{\dylanadidiagramsfalse}
\DeclareOption{colorsec}{\dylanadicolorsectrue}
\DeclareOption{nocolorsec}{\dylanadicolorsecfalse}

\DeclareOption{patchasy}{\dylanadipatchasytrue}
\DeclareOption{noasy}{\dylanadiasyfalse}

\DeclareOption{hints}{\dylanadihintstrue}

\DeclareOption{cabin}{\dylanadicabintrue}

\DeclareOption{darkmode}{\dylanadidarkmodetrue}

\ProcessOptions\relax

% if packages not loaded, turn off mdthm and asy
\ifdylanadipkg\else\dylanadimdthmfalse\fi
\ifdylanadipkg\else\dylanadiasyfalse\fi

% If no setup, turn off theorems
\ifdylanadisetup\else\dylanadithmfalse\fi

\ifdylanadicabin
\usepackage{cabin}
\fi

%%fakesection Some macros
%Small commands
\newcommand{\cbrt}[1]{\sqrt[3]{#1}}
\newcommand{\floor}[1]{\left\lfloor #1 \right\rfloor}
\newcommand{\ceiling}[1]{\left\lceil #1 \right\rceil}
\newcommand{\mailto}[1]{\href{mailto:#1}{\texttt{#1}}}
\newcommand{\ol}{\overline}
\newcommand{\ul}{\underline}
\newcommand{\wt}{\widetilde}
\newcommand{\wh}{\widehat}
\newcommand{\eps}{\varepsilon}
\newcommand{\SX}{\mathcal{X}}
\newcommand{\SW}{\mathcal{W}}
%\renewcommand{\iff}{\Leftrightarrow}
%\renewcommand{\implies}{\Rightarrow}
\definecolor{green1}{RGB}{52, 252, 52}
\definecolor{green2}{RGB}{88,222,44}
\definecolor{SkyBlue2}{RGB}{70,130,180}
\definecolor{Ultra}{RGB}{18,10,143}

\ifdylanadidarkmode
\ifdylanadiretro
\newcommand{\vocab}[1]{\textsf{\textbf{\textsl{\color{Violet!20!white} #1}}}}
\else
\newcommand{\vocab}[1]{\textsf{\textbf{\textsl{\color{Violet!50} #1}}}}
\fi
\else
\ifdylanadiretro
\newcommand{\vocab}[1]{\textsf{\textbf{\textsl{\color{retropink} #1}}}}
\else
\newcommand{\vocab}[1]{\textsf{\textbf{\textsl{\color{Violet} #1}}}}
\fi
\fi
\providecommand{\alert}{\vocab}
\providecommand{\half}{\frac{1}{2}}
\newcommand{\catname}{\mathsf}
\newcommand{\hrulebar}{
  \par\hspace{\fill}\rule{0.95\linewidth}{.7pt}\hspace{\fill}
  \par\nointerlineskip \vspace{\baselineskip}
}

%For use in author command
\newcommand{\plusemail}[1]{\\ \normalfont \texttt{\mailto{#1}}}

%More commands and math operators
\DeclareMathOperator{\cis}{cis}
\DeclareMathOperator*{\lcm}{lcm}
\DeclareMathOperator*{\argmin}{arg min}
\DeclareMathOperator*{\argmax}{arg max}

%Convenient Environments
\newenvironment{soln}{\begin{proof}[Solution]}{\end{proof}}
\newenvironment{answer}{\begin{proof}[Answer]}{\end{proof}}
\newenvironment{parlist}{\begin{inparaenum}[(i)]}{\end{inparaenum}}
\newenvironment{gobble}{\setbox\z@\vbox\bgroup}{\egroup}

%Inequalities
\newcommand{\cycsum}{\sum_{\mathrm{cyc}}}
\newcommand{\symsum}{\sum_{\mathrm{sym}}}
\newcommand{\cycprod}{\prod_{\mathrm{cyc}}}
\newcommand{\symprod}{\prod_{\mathrm{sym}}}
\newcommand{\peq}{\preceq}
\newcommand{\seq}{\succeq}
\newcommand{\pe}{\prec}
\newcommand{\se}{\succ}
% The sets of mathbb
\newcommand{\BB}{\mathbb B}
\newcommand{\CC}{\mathbb C}
\newcommand{\DD}{\mathbb D}
\newcommand{\EE}{\mathbb E}
\renewcommand{\FF}{\mathbb F}
\newcommand{\GG}{\mathbb G}
\newcommand{\HH}{\mathbb H}
\newcommand{\II}{\mathbb I}
\newcommand{\JJ}{\mathbb J}
\newcommand{\KK}{\mathbb K}
\newcommand{\LL}{\mathbb L}
\newcommand{\MM}{\mathbb M}
\newcommand{\NN}{\mathbb N}
\newcommand{\PP}{\mathbb P}
\newcommand{\QQ}{\mathbb Q}
\newcommand{\RR}{\mathbb R}
\newcommand{\ZZ}{\mathbb Z}
\newcommand{\charin}{\text{ char }}
\DeclareMathOperator{\sign}{sign}
\DeclareMathOperator{\Aut}{Aut}
\DeclareMathOperator{\Inn}{Inn}
\DeclareMathOperator{\Syl}{Syl}
\DeclareMathOperator{\Gal}{Gal}
\DeclareMathOperator{\GL}{GL} % General linear group
\DeclareMathOperator{\SL}{SL} % Special linear group

%From Kiran Kedlaya's "Geometry Unbound"
\newcommand{\abs}[1]{\left\lvert #1 \right\rvert}
\newcommand{\norm}[1]{\left\lVert #1 \right\rVert}
\newcommand{\dang}{\measuredangle} %% Directed angle
\newcommand{\ray}[1]{\overrightarrow{#1}} 
\newcommand{\seg}[1]{\overline{#1}}
\newcommand{\arc}[1]{\wideparen{#1}}

%From M275 "Topology" at SJSU
\newcommand{\id}{\mathrm{id}}
\newcommand{\taking}[1]{\xrightarrow{#1}}
\newcommand{\inv}{^{-1}}

%From M170 "Introduction to Graph Theory" at SJSU
\DeclareMathOperator{\diam}{diam}
\DeclareMathOperator{\ord}{ord}
\newcommand{\defeq}{\overset{\mathrm{def}}{=}}

%From the USAMO .tex files
\newcommand{\ts}{\textsuperscript}
\newcommand{\dg}{^\circ}
\newcommand{\ii}{\item}

% From Math 55 and Math 145 at Harvard
\newenvironment{subproof}[1][Proof]{%
\begin{proof}[#1] \renewcommand{\qedsymbol}{$\blacksquare$}}%
{\end{proof}}

%\newcommand{\liff}{\leftrightarrow}
%\newcommand{\lthen}{\rightarrow}
%\newcommand{\opname}{\operatorname}
%\newcommand{\surjto}{\twoheadrightarrow}
%\newcommand{\injto}{\hookrightarrow}
%\newcommand{\On}{\mathrm{On}} % ordinals
\DeclareMathOperator{\img}{im} % Image
\DeclareMathOperator{\Img}{Im} % Image
\DeclareMathOperator{\coker}{coker} % Cokernel
\DeclareMathOperator{\Coker}{Coker} % Cokernel
\DeclareMathOperator{\Ker}{Ker} % Kernel
\DeclareMathOperator{\rank}{rank}
\DeclareMathOperator{\Spec}{Spec} % spectrum
\DeclareMathOperator{\Tr}{Tr} % trace
\DeclareMathOperator{\pr}{pr} % projection
\DeclareMathOperator{\ext}{ext} % extension
\DeclareMathOperator{\pred}{pred} % predecessor
\DeclareMathOperator{\dom}{dom} % domain
\DeclareMathOperator{\ran}{ran} % range
\DeclareMathOperator{\Hom}{Hom} % homomorphism
\DeclareMathOperator{\Mor}{Mor} % morphisms
\DeclareMathOperator{\End}{End} % endomorphism


\definecolor{RusPurple}{RGB}{029, 002, 053}
% Things Lie
% \newcommand{\kb}{\mathfrak b}
% \newcommand{\kg}{\mathfrak g}
% \newcommand{\kh}{\mathfrak h}
% \newcommand{\kn}{\mathfrak n}
% \newcommand{\ku}{\mathfrak u}
% \newcommand{\kz}{\mathfrak z}
% \DeclareMathOperator{\Ext}{Ext} % Ext functor
% \DeclareMathOperator{\Tor}{Tor} % Tor functor
% \newcommand{\gl}{\opname{\mathfrak{gl}}} % frak gl group
% \renewcommand{\sl}{\opname{\mathfrak{sl}}} % frak sl group chktex 6

% A few mathcal
 \newcommand{\SA}{\mathcal A}
 \newcommand{\SB}{\mathcal B}
 \newcommand{\SC}{\mathcal C}
 \newcommand{\SD}{\mathcal D}
 \newcommand{\SF}{\mathcal F}
 \newcommand{\SG}{\mathcal G}
 \newcommand{\SH}{\mathcal H}
 \newcommand{\OO}{\mathcal O}
 \newcommand{\SM}{\mathcal{M}}
% \newcommand{\SCA}{\mathscr A}
% \newcommand{\SCB}{\mathscr B}
% \newcommand{\SCC}{\mathscr C}
% \newcommand{\SCD}{\mathscr D}
% \newcommand{\SCE}{\mathscr E}
% \newcommand{\SCF}{\mathscr F}
% \newcommand{\SCG}{\mathscr G}
% \newcommand{\SCH}{\mathscr H}

% Mathfrak primes
% \newcommand{\km}{\mathfrak m}
% \newcommand{\kp}{\mathfrak p}
% \newcommand{\kq}{\mathfrak q}

%% Napkin commands
% \newcommand{\prototype}[1]{
%	\emph{{\color{red} Prototypical example for this section:} #1} \par\medskip
% }

\newcommand{\paren}[1]{\left( #1 \right)}

\usepackage{thmtools}

\RequirePackage{xcolor}

\definecolor{darkmidnightblue}{rgb}{0.0, 0.2, 0.4}
\definecolor{sangria}{rgb}{0.57, 0.0, 0.04}

% \colorlet{LightRubineRed}{RubineRed!70!}
\definecolor{oucrimsonred}{rgb}{0.6, 0.0, 0.0} % syllabus section
\definecolor{darkred}{rgb}{0.9, 0.00, 0.0}

\definecolor{dennispurple}{RGB}{45,0,90} % dark purple
\definecolor{lightpurple}{RGB}{230,230,250}

\definecolor{thmblue}{rgb}{0.88, 0.95, 0.98}
\definecolor{darkblue}{RGB}{36,57,108}

\definecolor{thmgreen}{RGB}{207,241,208}
\definecolor{darkgreen}{RGB}{30,70,30}

\definecolor{thmred}{RGB}{240, 200, 200}
\definecolor{labelred}{RGB}{120, 30, 20}
\definecolor{importantred}{RGB}{100,15,15}

\definecolor{thmyellow}{HTML}{faf5cd}
\definecolor{labelyellow}{HTML}{999400}

\definecolor{proofbrown}{RGB}{100,40,40}
\definecolor{titlered}{rgb}{1.0, 0.0, 0.0}

\definecolor{persianblue}{rgb}{0.11, 0.22, 0.73}

% theorem colors

\definecolor{thmblue}{rgb}{0.88, 0.95, 0.98}
\definecolor{darkblue}{RGB}{36,57,108}
\definecolor{wildblueyonder}{rgb}{0.64, 0.68, 0.82}

\definecolor{thmgreen}{RGB}{207,241,208}
\definecolor{darkgreen}{RGB}{30,70,30}

\definecolor{thmred}{RGB}{240, 200, 200}
\definecolor{darkred}{RGB}{120, 30, 20}

\definecolor{proofbrown}{RGB}{100,40,40}
\definecolor{aqua}{rgb}{0,1,1}

\definecolor{retropink}{HTML}{F56866}
\definecolor{retroblue}{rgb}{0.45, 0.66, 0.76}
\definecolor{retrogreen}{HTML}{336C5E}
\definecolor{retrocyan}{rgb}{0.0, 0.55, 0.55}
\definecolor{retropurple}{rgb}{0.6, 0.2, 0.8}
\definecolor{retroorange}{HTML}{FD6A02}
\definecolor{retroindigo}{HTML}{5E67B8}
\definecolor{retroiris}{rgb}{0.35, 0.31, 0.81}
\definecolor{retrolazuli}{rgb}{0.15, 0.38, 0.61}
\definecolor{retrolavender}{rgb}{0.8, 0.8, 1.0}
\definecolor{retrograss}{HTML}{5DBB63}

\ifdylanadidarkmode
\ifdylanadiretro
\newtheoremstyle{dylantheo}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{retroblue!50!white}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylantheononum}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{retroblue!50!white}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylandef}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{retropink!40!white}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\footnotesize{\thmnote{#3}}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanexam}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{SpringGreen!40!white}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanmoral}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{retrocyan!30}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanprob}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{retropurple!10!white}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanfact}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{retroorange!35}\sffamily\bfseries}%                            % Theorem head font
  {.}%                                    % Punctuation after theorem head
  { }%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')

\newtheoremstyle{dylanexercise}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\small\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{retroindigo!30}\sffamily\bfseries}%                            % Theorem head font
  {.}%                                    % Punctuation after theorem head
  { }%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%
  
\newtheoremstyle{dylanProblem}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\notofont\color{\maincolor}\bfseries}%                            % Theorem head font
  {.}%                                    % Punctuation after theorem head
  { }%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%
  
\newtheoremstyle{dylanwalk}%                % Name
  {}%                                     % Space above
  {}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{retrograss}\sffamily\bfseries}%                            % Theorem head font
  {.}%                                    % Punctuation after theorem head
  {1.5mm}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ #3}}%
  
\newtheoremstyle{dylaninduct}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{SkyBlue!55}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylancase}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{Magenta!15}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanremark}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\small\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{white}\sffamily\itshape}%                            % Theorem head font
  {.}%                                    % Punctuation after theorem head
  { }%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanmini}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{black}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanclaim}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{Emerald!5}\sffamily\bfseries}%                            % Theorem head font
  { --- }%                                    % Punctuation after theorem head
  { }%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1} \thmnote{ (#3)}}%   
\else
\newtheoremstyle{dylantheo}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{wildblueyonder!90!black}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylantheononum}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{wildblueyonder!90!black}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylandef}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{WildStrawberry!50!white}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\footnotesize{\thmnote{#3}}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanexam}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{thmgreen!90!black}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanmoral}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{aqua!10}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanprob}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{BlueViolet!10!white}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanfact}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{Dandelion!50}\sffamily\bfseries}%                            % Theorem head font
  {.}%                                    % Punctuation after theorem head
  { }%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')

\newtheoremstyle{dylanexercise}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\small\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{MidnightBlue!50}\sffamily\bfseries}%                            % Theorem head font
  {.}%                                    % Punctuation after theorem head
  { }%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%
  
\newtheoremstyle{dylanProblem}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\notofont\color{\maincolor}\bfseries}%                            % Theorem head font
  {.}%                                    % Punctuation after theorem head
  { }%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%
  
\newtheoremstyle{dylanwalk}%                % Name
  {}%                                     % Space above
  {}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{PineGreen}\sffamily\bfseries}%                            % Theorem head font
  {.}%                                    % Punctuation after theorem head
  {1.5mm}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ #3}}%
  
\newtheoremstyle{dylaninduct}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{SkyBlue!35}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylancase}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{Magenta!45}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanremark}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\small\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{white}\sffamily\itshape}%                            % Theorem head font
  {.}%                                    % Punctuation after theorem head
  { }%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanmini}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\color{white}}%                                     % Body font
  {}%                                     % Indent amount
  {\color{white}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline\color{white}}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanclaim}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{NavyBlue!5}\sffamily\bfseries}%                            % Theorem head font
  { --- }%                                    % Punctuation after theorem head
  { }%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1} \thmnote{ (#3)}}%   % dm indic
\fi
\else
\ifdylanadiretro
\newtheoremstyle{dylantheo}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{retroblue}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylantheononum}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{retroblue}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylandef}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{retropink}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\footnotesize{\thmnote{#3}}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanexam}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{retrogreen}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanmoral}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{retrocyan}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanprob}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{retropurple}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanfact}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{retroorange}\sffamily\bfseries}%                            % Theorem head font
  {.}%                                    % Punctuation after theorem head
  { }%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')

\newtheoremstyle{dylanexercise}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\small}%                                     % Body font
  {}%                                     % Indent amount
  {\color{retroindigo}\sffamily\bfseries}%                            % Theorem head font
  {.}%                                    % Punctuation after theorem head
  { }%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%
  
\newtheoremstyle{dylanProblem}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\notofont\color{\maincolor}\bfseries}%                            % Theorem head font
  {.}%                                    % Punctuation after theorem head
  { }%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%
  
\newtheoremstyle{dylanwalk}%                % Name
  {}%                                     % Space above
  {}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{retrograss}\sffamily\bfseries}%                            % Theorem head font
  {.}%                                    % Punctuation after theorem head
  {1.5mm}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ #3}}%
  
\newtheoremstyle{dylaninduct}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{Cyan!50!retrolazuli}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylancase}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{Magenta!50!retrolazuli}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanremark}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\small}%                                     % Body font
  {}%                                     % Indent amount
  {\color{black}\sffamily\itshape}%                            % Theorem head font
  {.}%                                    % Punctuation after theorem head
  { }%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanmini}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{black}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanclaim}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{Cyan!40!black}\sffamily\bfseries}%                            % Theorem head font
  { --- }%                                    % Punctuation after theorem head
  { }%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1} \thmnote{ (#3)}}%   
\else
\newtheoremstyle{dylantheo}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{darkblue}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylantheononum}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{darkblue}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylandef}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{sangria}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\footnotesize{\thmnote{#3}}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanexam}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{ForestGreen}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanmoral}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{aqua!95!black}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanprob}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{RoyalPurple}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanfact}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{BurntOrange}\sffamily\bfseries}%                            % Theorem head font
  {.}%                                    % Punctuation after theorem head
  { }%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')

\newtheoremstyle{dylanexercise}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\small}%                                     % Body font
  {}%                                     % Indent amount
  {\color{NavyBlue}\sffamily\bfseries}%                            % Theorem head font
  {.}%                                    % Punctuation after theorem head
  { }%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%
  
\newtheoremstyle{dylanProblem}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\notofont\color{\maincolor}\bfseries}%                            % Theorem head font
  {.}%                                    % Punctuation after theorem head
  { }%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%
  
\newtheoremstyle{dylanwalk}%                % Name
  {}%                                     % Space above
  {}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{PineGreen}\sffamily\bfseries}%                            % Theorem head font
  {.}%                                    % Punctuation after theorem head
  {1.5mm}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ #3}}%
  
\newtheoremstyle{dylaninduct}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{Cyan!50!CornflowerBlue}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylancase}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{Magenta!50!CornflowerBlue}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanremark}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {\small}%                                     % Body font
  {}%                                     % Indent amount
  {\color{black}\sffamily\itshape}%                            % Theorem head font
  {.}%                                    % Punctuation after theorem head
  { }%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnumber{ #2}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanmini}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{black}\sffamily\bfseries}%                            % Theorem head font
  {}%                                    % Punctuation after theorem head
  {\newline}%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1}\thmnote{ (#3)}}%                                     % Theorem head spec (can be left empty, meaning `normal')
  
\newtheoremstyle{dylanclaim}%                % Name
  {0pt}%                                     % Space above
  {2pt}%                                     % Space below
  {}%                                     % Body font
  {}%                                     % Indent amount
  {\color{NavyBlue!90!black}\sffamily\bfseries}%                            % Theorem head font
  { --- }%                                    % Punctuation after theorem head
  { }%                                    % Space after theorem head, ' ', or \newline
  {\thmname{#1} \thmnote{ (#3)}}%   
\fi
\fi

\usepackage[framemethod=tikz]{mdframed}

\RequirePackage{tcolorbox}
\tcbuselibrary{skins}
\tcbuselibrary{breakable}
\tcbuselibrary{theorems}

\ifdylanadidarkmode
\ifdylanadiretro
\ifdylanadisecthm
\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=retroblue!50!black,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=retroblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{theorem}{Theorem}[section]
\else
\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=retroblue!50!black,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=retroblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{theorem}{Theorem}
\fi

\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=retroblue!50!black,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=retroblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{lemma}[theorem]{Lemma}

\theoremstyle{dylantheononum}
\newmdtheoremenv[% settings
backgroundcolor=retroblue!50!black,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=retroblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{lemma*}{Lemma}

\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=retroblue!50!black,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=retroblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{corollary}[theorem]{Corollary}

\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=retroblue!50!black,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=retroblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{postulate}[theorem]{Postulate}

\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=retroblue!50!black,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=retroblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{prop}[theorem]{Proposition}

\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=retroblue!50!black,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=retroblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{law}[theorem]{Law}

\theoremstyle{dylandef}
\newmdtheoremenv[% settings
backgroundcolor=retropink!60!black,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=retropink!40!white,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=true]{defn}{Definition}

\theoremstyle{dylanexam}
\newmdtheoremenv[% settings
backgroundcolor=retrogreen!60!black,
linecolor=SpringGreen!40!white,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=true,
bottomline=true,
rightline=true,
leftline=true]{example}[theorem]{Example}

\theoremstyle{dylanmoral} 
\newmdtheoremenv[% settings
backgroundcolor=retrocyan,
linecolor=retrocyan!30,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=true,
bottomline=true,
rightline=true,
leftline=true]{moral}{Moral}

\theoremstyle{dylanprob} 
\newmdtheoremenv[% settings
backgroundcolor=retropurple,
linecolor=retropurple!10!white,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=true,
bottomline=true,
rightline=true,
leftline=true]{problem}[theorem]{Problem}

\theoremstyle{dylanfact}
\newmdtheoremenv[% settings
backgroundcolor=retroorange!80!black,
linecolor=retroorange!35,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=true,
bottomline=true,
rightline=true,
leftline=true]{fact}[theorem]{Fact}

\theoremstyle{dylanexercise}
\newmdtheoremenv[% settings
nobreak=false,
innerleftmargin=0pt,
innerrightmargin=0pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{exercise}[theorem]{Exercise}

\theoremstyle{dylanProblem}
\newmdtheoremenv[% settings
backgroundcolor=black,
nobreak=false,
innerleftmargin=0pt,
innerrightmargin=0pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{Problem}{Problem}

% \makeatletter
% \newcommand\asycode[2][]{%
%   \stepcounter{asy}%
%   \setkeys{ASYkeys}{#1}%
%   \ifASYattach
%     \ASYinlinefalse
%   \fi
%   \ifx\asydir\empty\else
%     \def\ASYprefix{\asydir/}%
%   \fi
%   \immediate\write\AsyPreStream{%
%     \noexpand\InputIfFileExists{%
%       \ASYprefix\noexpand\jobname-\the\c@asy.pre}{}{}%
%   }
%   \asy@write@graphic@header
%   \immediate\write\AsyStream{\detokenize{#2}}% here asy does the writing
%   \asy@finalise@stream
%   \asy@input@graphic
% }
% \makeatother

% \usepackage{environ}
% \NewEnviron{Problem}[1][]{
% \ifx&#1&%
%     \problem{\BODY}
% \else
%     \problem[#1]{\BODY}
% \fi
% }

\theoremstyle{dylaninduct}
\newmdtheoremenv[% settings
backgroundcolor=Cyan!50!retrolazuli,
linecolor=SkyBlue!55,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{basecase}{Base Case}

\theoremstyle{dylaninduct}
\newmdtheoremenv[% settings
backgroundcolor=SkyBlue!15,
linecolor=Cyan!50!retrolazuli,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{indstep}{Inductive Step}

\theoremstyle{dylancase}
\newmdtheoremenv[% settings
backgroundcolor=Magenta!50!retrolazuli,
linecolor=Magenta!15,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=true,
bottomline=true,
rightline=true,
leftline=true]{case}{Case}

\theoremstyle{dylanremark}
\newmdtheoremenv[% settings
backgroundcolor=black!70,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=white,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=true]{remark}[theorem]{Remark}

% \theoremstyle{dylanremark}
% \newmdtheoremenv[% settings
% backgroundcolor=black!70,
% nobreak=true,
% innertopmargin=5pt,
% innerleftmargin=7pt,
% innerrightmargin=7pt,
% linecolor=white,
% linewidth=3pt,
% topline=false,
% bottomline=false,
% rightline=false,
% leftline=true]{solution}[theorem]{Solution}

\newenvironment{exercisebox}{\begin{mdframed}[backgroundcolor=retroindigo!70!black,linecolor=retroindigo!30,linewidth=1mm,topline=false,bottomline=false,leftline=true,rightline=false,
    innertopmargin=3pt,
    innerbottommargin=2pt,
    innerrightmargin=5pt,
    innerleftmargin=5pt]}{\end{mdframed}}
    
% \newenvironment{problembox}{\begin{mdframed}[backgroundcolor=WildStrawberry!10,linecolor=RedViolet,linewidth=0.3mm,topline=true,bottomline=true,leftline=true,rightline=true,
%     innertopmargin=3pt,
%     innerbottommargin=2pt,
%     innerrightmargin=5pt,
%     innerleftmargin=5pt]}{\end{mdframed}}

\newenvironment{problembox}{}{}
    
\theoremstyle{dylanwalk}

%%added walk for walkthroughs 
\newtheorem*{walk}{Walkthrough} % always use the enumerate environment during walkthroughs

% \def\walk{\noindent {\color{PineGreen}\sffamily\bfseries Walkthrough. }\hspace*{2mm}}

\usetikzlibrary{calc}
\usepackage{fourier-orns}
\definecolor{warningColor}{HTML}{CC7575}
\tikzset{
  warningsymbol/.style={
      circle,
      draw=black,
      fill=black,
      scale=1,
      overlay}
}

\mdfdefinestyle{warning}{%
 hidealllines=true,leftline=true,
 skipabove=12,skipbelow=12pt,
 backgroundcolor=black,
 innertopmargin=0.2em,%
 innerbottommargin=0.2em,%
 innerrightmargin=0.2em,%
 rightmargin=0.1em,%
 innerleftmargin=1.7em,%
 leftmargin=0.1em,%
 middlelinewidth=.2em,%
 linecolor=warningColor,%
 fontcolor=warningColor,%
 firstextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[warningsymbol] {\warning};},%
 secondextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[warningsymbol] {\warning};},%
 middleextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[warningsymbol] {\warning};},%
 singleextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[warningsymbol] {\warning};},%
}

\newmdenv[style=warning]{caution}

\newcounter{question}
\newenvironment{question}{
\refstepcounter{question}\label{q\thequestion}%
\noindent%
\begin{addmargin}[0em]{0em}
  \makebox[0pt][r]{\tikz[baseline=(text.base)]{
    \coordinate (box top left) at (0, 0);
    \coordinate (box bottom right) at (3em, 1.2\baselineskip);
    \path[use as bounding box] (box top left) rectangle (box bottom right);
    \fill[opacity=0.8, Sepia] (box top left) rectangle (box bottom right) node[midway, anchor=center](textpoint){};
    \node[anchor=center, text=Sepia!10](text) at (textpoint) {\sffamily\arabic{question}};
    \path[draw=Sepia!10, thick] let \p1 = (box top left), \p2 = (box bottom right) in (\p1) -- (\x2, \y1);
  }\hspace{1em}}%
}{
\end{addmargin}
\filbreak
}

\theoremstyle{dylanclaim}
\newmdtheoremenv[% settings
backgroundcolor=Cyan!40!black,
linecolor=Emerald!5,
linewidth=1mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=false,
bottomline=false,
rightline=false,
leftline=true]{claim}{Claim}
\else
\ifdylanadisecthm
\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=darkblue!60!black,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=wildblueyonder!90!black,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{theorem}{Theorem}[section]
\else
\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=darkblue!60!black,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=wildblueyonder!90!black,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{theorem}{Theorem}
\fi

\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=darkblue!60!black,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=wildblueyonder!90!black,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{lemma}[theorem]{Lemma}

\theoremstyle{dylantheononum}
\newmdtheoremenv[% settings
backgroundcolor=darkblue!60!black,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=wildblueyonder!90!black,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{lemma*}{Lemma}

\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=darkblue!60!black,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=wildblueyonder!90!black,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{corollary}[theorem]{Corollary}

\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=darkblue!60!black,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=wildblueyonder!90!black,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{postulate}[theorem]{Postulate}

\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=darkblue!60!black,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=wildblueyonder!90!black,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{prop}[theorem]{Proposition}

\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=darkblue!60!black,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=wildblueyonder!90!black,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{law}[theorem]{Law}

\theoremstyle{dylandef}
\newmdtheoremenv[% settings
backgroundcolor=sangria!70!black,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=WildStrawberry!50!white,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=true]{defn}{Definition}

\theoremstyle{dylanexam}
\newmdtheoremenv[% settings
backgroundcolor=ForestGreen!50!black,
linecolor=thmgreen!90!black,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=true,
bottomline=true,
rightline=true,
leftline=true]{example}[theorem]{Example}

\theoremstyle{dylanmoral} 
\newmdtheoremenv[% settings
backgroundcolor=aqua!70!black,
linecolor=aqua!10,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=true,
bottomline=true,
rightline=true,
leftline=true]{moral}{Moral}

\theoremstyle{dylanprob} 
\newmdtheoremenv[% settings
backgroundcolor=RoyalPurple,
linecolor=BlueViolet!10!white,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=true,
bottomline=true,
rightline=true,
leftline=true]{problem}[theorem]{Problem}

\theoremstyle{dylanfact}
\newmdtheoremenv[% settings
backgroundcolor=BurntOrange!50!black,
linecolor=Dandelion!50,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=true,
bottomline=true,
rightline=true,
leftline=true]{fact}[theorem]{Fact}

\theoremstyle{dylanexercise}
\newmdtheoremenv[% settings
nobreak=false,
innerleftmargin=0pt,
innerrightmargin=0pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{exercise}[theorem]{Exercise}

\theoremstyle{dylanProblem}
\newmdtheoremenv[% settings
backgroundcolor=black,
nobreak=false,
innerleftmargin=0pt,
innerrightmargin=0pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{Problem}{Problem}

% \makeatletter
% \newcommand\asycode[2][]{%
%   \stepcounter{asy}%
%   \setkeys{ASYkeys}{#1}%
%   \ifASYattach
%     \ASYinlinefalse
%   \fi
%   \ifx\asydir\empty\else
%     \def\ASYprefix{\asydir/}%
%   \fi
%   \immediate\write\AsyPreStream{%
%     \noexpand\InputIfFileExists{%
%       \ASYprefix\noexpand\jobname-\the\c@asy.pre}{}{}%
%   }
%   \asy@write@graphic@header
%   \immediate\write\AsyStream{\detokenize{#2}}% here asy does the writing
%   \asy@finalise@stream
%   \asy@input@graphic
% }
% \makeatother

% \usepackage{environ}
% \NewEnviron{Problem}[1][]{
% \ifx&#1&%
%     \problem{\BODY}
% \else
%     \problem[#1]{\BODY}
% \fi
% }

\theoremstyle{dylaninduct}
\newmdtheoremenv[% settings
backgroundcolor=Cyan!50!CornflowerBlue!50!black,
linecolor=SkyBlue!35,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{basecase}{Base Case}

\theoremstyle{dylaninduct}
\newmdtheoremenv[% settings
backgroundcolor=Cyan!50!CornflowerBlue!50!black,
linecolor=SkyBlue!35,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{indstep}{Inductive Step}

\theoremstyle{dylancase}
\newmdtheoremenv[% settings
backgroundcolor=Magenta!50!CornflowerBlue!40!black,
linecolor=Magenta!45,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=true,
bottomline=true,
rightline=true,
leftline=true]{case}{Case}

\theoremstyle{dylanremark}
\newmdtheoremenv[% settings
backgroundcolor=black!70,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=white,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=true]{remark}[theorem]{Remark}

% \theoremstyle{dylanremark}
% \newmdtheoremenv[% settings
% backgroundcolor=black!70,
% nobreak=true,
% innertopmargin=5pt,
% innerleftmargin=7pt,
% innerrightmargin=7pt,
% linecolor=white,
% linewidth=3pt,
% topline=false,
% bottomline=false,
% rightline=false,
% leftline=true]{solution}[theorem]{Solution}

\newenvironment{exercisebox}{\begin{mdframed}[backgroundcolor=NavyBlue!30!black,linecolor=MidnightBlue!50,linewidth=1mm,topline=false,bottomline=false,leftline=true,rightline=false,
    innertopmargin=3pt,
    innerbottommargin=2pt,
    innerrightmargin=5pt,
    innerleftmargin=5pt]}{\end{mdframed}}
    
% \newenvironment{problembox}{\begin{mdframed}[backgroundcolor=WildStrawberry!10,linecolor=RedViolet,linewidth=0.3mm,topline=true,bottomline=true,leftline=true,rightline=true,
%     innertopmargin=3pt,
%     innerbottommargin=2pt,
%     innerrightmargin=5pt,
%     innerleftmargin=5pt]}{\end{mdframed}}

\newenvironment{problembox}{}{}
    
\theoremstyle{dylanwalk}

%%added walk for walkthroughs 
\newtheorem*{walk}{Walkthrough} % always use the enumerate environment during walkthroughs

% \def\walk{\noindent {\color{PineGreen}\sffamily\bfseries Walkthrough. }\hspace*{2mm}}

\usetikzlibrary{calc}
\usepackage{fourier-orns}
\definecolor{warningColor}{HTML}{FF1414}
\tikzset{
  warningsymbol/.style={
      circle,
      draw=black,
      fill=black,
      scale=1,
      overlay}
}

\mdfdefinestyle{warning}{%
 hidealllines=true,leftline=true,
 skipabove=12,skipbelow=12pt,
 backgroundcolor=black,
 innertopmargin=0.2em,%
 innerbottommargin=0.2em,%
 innerrightmargin=0.2em,%
 rightmargin=0.1em,%
 innerleftmargin=1.7em,%
 leftmargin=0.1em,%
 middlelinewidth=.2em,%
 linecolor=warningColor,%
 fontcolor=warningColor,%
 firstextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[warningsymbol] {\warning};},%
 secondextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[warningsymbol] {\warning};},%
 middleextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[warningsymbol] {\warning};},%
 singleextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[warningsymbol] {\warning};},%
}

\newmdenv[style=warning]{caution}

\newcounter{question}
\newenvironment{question}{
\refstepcounter{question}\label{q\thequestion}%
\noindent%
\begin{addmargin}[0em]{0em}
  \makebox[0pt][r]{\tikz[baseline=(text.base)]{
    \coordinate (box top left) at (0, 0);
    \coordinate (box bottom right) at (3em, 1.2\baselineskip);
    \path[use as bounding box] (box top left) rectangle (box bottom right);
    \fill[opacity=0.8, RawSienna] (box top left) rectangle (box bottom right) node[midway, anchor=center](textpoint){};
    \node[anchor=center, text=RawSienna!10](text) at (textpoint) {\sffamily\arabic{question}};
    \path[draw=RawSienna!10, thick] let \p1 = (box top left), \p2 = (box bottom right) in (\p1) -- (\x2, \y1);
  }\hspace{1em}}%
}{
\end{addmargin}
\filbreak
}

\theoremstyle{dylanclaim}
\newmdtheoremenv[% settings
backgroundcolor=NavyBlue!90!black,
linecolor=NavyBlue!5,
linewidth=1mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=false,
bottomline=false,
rightline=false,
leftline=true]{claim}{Claim}
\fi
\else
\ifdylanadiretro
\ifdylanadisecthm
\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=retrolavender!30!white,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=retroblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{theorem}{Theorem}[section]
\else
\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=retrolavender!30!white,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=retroblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{theorem}{Theorem}
\fi

\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=retrolavender!30!white,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=retroblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{lemma}[theorem]{Lemma}

\theoremstyle{dylantheononum}
\newmdtheoremenv[% settings
backgroundcolor=retrolavender!30!white,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=retroblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{lemma*}{Lemma}

\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=retrolavender!30!white,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=retroblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{corollary}[theorem]{Corollary}

\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=retrolavender!30!white,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=retroblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{postulate}[theorem]{Postulate}

\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=retrolavender!30!white,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=retroblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{prop}[theorem]{Proposition}

\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=retrolavender!30!white,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=retroblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{law}[theorem]{Law}

\theoremstyle{dylandef}
\newmdtheoremenv[% settings
backgroundcolor=retropink!20!white,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=retropink,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=true]{defn}{Definition}

\theoremstyle{dylanexam}
\newmdtheoremenv[% settings
backgroundcolor=SpringGreen!10!white,
linecolor=retrogreen,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=true,
bottomline=true,
rightline=true,
leftline=true]{example}[theorem]{Example}

\theoremstyle{dylanmoral} 
\newmdtheoremenv[% settings
backgroundcolor=retrocyan!10,
linecolor=retrocyan,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=true,
bottomline=true,
rightline=true,
leftline=true]{moral}{Moral}

\theoremstyle{dylanprob} 
\newmdtheoremenv[% settings
backgroundcolor=retropurple!10!white,
linecolor=retropurple,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=true,
bottomline=true,
rightline=true,
leftline=true]{problem}[theorem]{Problem}

\theoremstyle{dylanfact}
\newmdtheoremenv[% settings
backgroundcolor=retroorange!15,
linecolor=retroorange,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=true,
bottomline=true,
rightline=true,
leftline=true]{fact}[theorem]{Fact}

\theoremstyle{dylanexercise}
\newmdtheoremenv[% settings
nobreak=false,
innerleftmargin=0pt,
innerrightmargin=0pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{exercise}[theorem]{Exercise}

\theoremstyle{dylanProblem}
\newmdtheoremenv[% settings
nobreak=false,
innerleftmargin=0pt,
innerrightmargin=0pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{Problem}{Problem}

% \makeatletter
% \newcommand\asycode[2][]{%
%   \stepcounter{asy}%
%   \setkeys{ASYkeys}{#1}%
%   \ifASYattach
%     \ASYinlinefalse
%   \fi
%   \ifx\asydir\empty\else
%     \def\ASYprefix{\asydir/}%
%   \fi
%   \immediate\write\AsyPreStream{%
%     \noexpand\InputIfFileExists{%
%       \ASYprefix\noexpand\jobname-\the\c@asy.pre}{}{}%
%   }
%   \asy@write@graphic@header
%   \immediate\write\AsyStream{\detokenize{#2}}% here asy does the writing
%   \asy@finalise@stream
%   \asy@input@graphic
% }
% \makeatother

% \usepackage{environ}
% \NewEnviron{Problem}[1][]{
% \ifx&#1&%
%     \problem{\BODY}
% \else
%     \problem[#1]{\BODY}
% \fi
% }

\theoremstyle{dylaninduct}
\newmdtheoremenv[% settings
backgroundcolor=SkyBlue!15,
linecolor=Cyan!50!retrolazuli,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{basecase}{Base Case}

\theoremstyle{dylaninduct}
\newmdtheoremenv[% settings
backgroundcolor=SkyBlue!15,
linecolor=Cyan!50!retrolazuli,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{indstep}{Inductive Step}

\theoremstyle{dylancase}
\newmdtheoremenv[% settings
backgroundcolor=Magenta!15,
linecolor=Magenta!50!retrolazuli,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=true,
bottomline=true,
rightline=true,
leftline=true]{case}{Case}

\theoremstyle{dylanremark}
\newmdtheoremenv[% settings
backgroundcolor=black!5,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=black,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=true]{remark}[theorem]{Remark}

% \theoremstyle{dylanremark}
% \newmdtheoremenv[% settings
% backgroundcolor=Black!5,
% linecolor=Black,
% linewidth=0.3mm,
% nobreak=false,
% innerleftmargin=5pt,
% innerrightmargin=5pt,
% topline=true,
% bottomline=true,
% rightline=true,
% leftline=true]{solution}[theorem]{Solution}

\newenvironment{exercisebox}{\begin{mdframed}[backgroundcolor=retroindigo!10,linecolor=retroindigo,linewidth=1mm,topline=false,bottomline=false,leftline=true,rightline=false,
    innertopmargin=3pt,
    innerbottommargin=2pt,
    innerrightmargin=5pt,
    innerleftmargin=5pt]}{\end{mdframed}}
    
% \newenvironment{problembox}{\begin{mdframed}[backgroundcolor=WildStrawberry!10,linecolor=RedViolet,linewidth=0.3mm,topline=true,bottomline=true,leftline=true,rightline=true,
%     innertopmargin=3pt,
%     innerbottommargin=2pt,
%     innerrightmargin=5pt,
%     innerleftmargin=5pt]}{\end{mdframed}}

\newenvironment{problembox}{}{}
    
\theoremstyle{dylanwalk}

%%added walk for walkthroughs 
\newtheorem*{walk}{Walkthrough} % always use the enumerate environment during walkthroughs

% \def\walk{\noindent {\color{PineGreen}\sffamily\bfseries Walkthrough. }\hspace*{2mm}}

\usetikzlibrary{calc}
\usepackage{fourier-orns}
\definecolor{warningColor}{HTML}{AF2828}
\tikzset{
  warningsymbol/.style={
      circle,
      draw=white,
      fill=white,
      scale=1,
      overlay}
}

\mdfdefinestyle{warning}{%
 hidealllines=true,leftline=true,
 skipabove=12,skipbelow=12pt,
 innertopmargin=0.2em,%
 innerbottommargin=0.2em,%
 innerrightmargin=0.2em,%
 rightmargin=0.1em,%
 innerleftmargin=1.7em,%
 leftmargin=0.1em,%
 middlelinewidth=.2em,%
 linecolor=warningColor,%
 fontcolor=warningColor,%
 firstextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[warningsymbol] {\warning};},%
 secondextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[warningsymbol] {\warning};},%
 middleextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[warningsymbol] {\warning};},%
 singleextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[warningsymbol] {\warning};},%
}

\newmdenv[style=warning]{caution}

\newcounter{question}
\newenvironment{question}{
\refstepcounter{question}\label{q\thequestion}%
\noindent%
\begin{addmargin}[0em]{0em}
  \makebox[0pt][r]{\tikz[baseline=(text.base)]{
    \coordinate (box top left) at (0, 0);
    \coordinate (box bottom right) at (3em, 1.2\baselineskip);
    \path[use as bounding box] (box top left) rectangle (box bottom right);
    \fill[opacity=0.1, Sepia] (box top left) rectangle (box bottom right) node[midway, anchor=center](textpoint){};
    \node[anchor=center, text=Sepia](text) at (textpoint) {\sffamily\arabic{question}};
    \path[draw=Sepia, thick] let \p1 = (box top left), \p2 = (box bottom right) in (\p1) -- (\x2, \y1);
  }\hspace{1em}}%
}{
\end{addmargin}
\filbreak
}

\theoremstyle{dylanclaim}
\newmdtheoremenv[% settings
backgroundcolor=Emerald!5,
linecolor=Cyan!40!black,
linewidth=1mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=false,
bottomline=false,
rightline=false,
leftline=true]{claim}{Claim}
\else
\ifdylanadisecthm
\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=wildblueyonder!30!white,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=darkblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{theorem}{Theorem}[section]
\else
\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=wildblueyonder!30!white,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=darkblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{theorem}{Theorem}
\fi

\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=wildblueyonder!30!white,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=darkblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{lemma}[theorem]{Lemma}

\theoremstyle{dylantheononum}
\newmdtheoremenv[% settings
backgroundcolor=wildblueyonder!30!white,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=darkblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{lemma*}{Lemma}

\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=wildblueyonder!30!white,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=darkblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{corollary}[theorem]{Corollary}

\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=wildblueyonder!30!white,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=darkblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{postulate}[theorem]{Postulate}

\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=wildblueyonder!30!white,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=darkblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{prop}[theorem]{Proposition}

\theoremstyle{dylantheo}
\newmdtheoremenv[% settings
backgroundcolor=wildblueyonder!30!white,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=darkblue,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{law}[theorem]{Law}

\theoremstyle{dylandef}
\newmdtheoremenv[% settings
backgroundcolor=WildStrawberry!20!white,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=sangria,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=true]{defn}{Definition}

\theoremstyle{dylanexam}
\newmdtheoremenv[% settings
backgroundcolor=thmgreen!50!white,
linecolor=ForestGreen,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=true,
bottomline=true,
rightline=true,
leftline=true]{example}[theorem]{Example}

\theoremstyle{dylanmoral} 
\newmdtheoremenv[% settings
backgroundcolor=aqua!10,
linecolor=aqua!95!black,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=true,
bottomline=true,
rightline=true,
leftline=true]{moral}{Moral}

\theoremstyle{dylanprob} 
\newmdtheoremenv[% settings
backgroundcolor=BlueViolet!10!white,
linecolor=RoyalPurple,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=true,
bottomline=true,
rightline=true,
leftline=true]{problem}[theorem]{Problem}

\theoremstyle{dylanfact}
\newmdtheoremenv[% settings
backgroundcolor=Dandelion!15,
linecolor=BurntOrange,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=true,
bottomline=true,
rightline=true,
leftline=true]{fact}[theorem]{Fact}

\theoremstyle{dylanexercise}
\newmdtheoremenv[% settings
nobreak=false,
innerleftmargin=0pt,
innerrightmargin=0pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{exercise}[theorem]{Exercise}

\theoremstyle{dylanProblem}
\newmdtheoremenv[% settings
nobreak=false,
innerleftmargin=0pt,
innerrightmargin=0pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{Problem}{Problem}

% \makeatletter
% \newcommand\asycode[2][]{%
%   \stepcounter{asy}%
%   \setkeys{ASYkeys}{#1}%
%   \ifASYattach
%     \ASYinlinefalse
%   \fi
%   \ifx\asydir\empty\else
%     \def\ASYprefix{\asydir/}%
%   \fi
%   \immediate\write\AsyPreStream{%
%     \noexpand\InputIfFileExists{%
%       \ASYprefix\noexpand\jobname-\the\c@asy.pre}{}{}%
%   }
%   \asy@write@graphic@header
%   \immediate\write\AsyStream{\detokenize{#2}}% here asy does the writing
%   \asy@finalise@stream
%   \asy@input@graphic
% }
% \makeatother

% \usepackage{environ}
% \NewEnviron{Problem}[1][]{
% \ifx&#1&%
%     \problem{\BODY}
% \else
%     \problem[#1]{\BODY}
% \fi
% }

\theoremstyle{dylaninduct}
\newmdtheoremenv[% settings
backgroundcolor=SkyBlue!15,
linecolor=Cyan!50!CornflowerBlue,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{basecase}{Base Case}

\theoremstyle{dylaninduct}
\newmdtheoremenv[% settings
backgroundcolor=SkyBlue!15,
linecolor=Cyan!50!CornflowerBlue,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=false,
bottomline=false,
rightline=false,
leftline=false]{indstep}{Inductive Step}

\theoremstyle{dylancase}
\newmdtheoremenv[% settings
backgroundcolor=Magenta!15,
linecolor=Magenta!50!CornflowerBlue,
linewidth=0.3mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=true,
bottomline=true,
rightline=true,
leftline=true]{case}{Case}

\theoremstyle{dylanremark}
\newmdtheoremenv[% settings
backgroundcolor=black!5,
nobreak=true,
innertopmargin=5pt,
innerleftmargin=7pt,
innerrightmargin=7pt,
linecolor=black,
linewidth=3pt,
topline=false,
bottomline=false,
rightline=false,
leftline=true]{remark}[theorem]{Remark}

% \theoremstyle{dylanremark}
% \newmdtheoremenv[% settings
% backgroundcolor=Black!5,
% linecolor=Black,
% linewidth=0.3mm,
% nobreak=false,
% innerleftmargin=5pt,
% innerrightmargin=5pt,
% topline=true,
% bottomline=true,
% rightline=true,
% leftline=true]{solution}[theorem]{Solution}

\newenvironment{exercisebox}{\begin{mdframed}[backgroundcolor=MidnightBlue!10,linecolor=NavyBlue,linewidth=1mm,topline=false,bottomline=false,leftline=true,rightline=false,
    innertopmargin=3pt,
    innerbottommargin=2pt,
    innerrightmargin=5pt,
    innerleftmargin=5pt]}{\end{mdframed}}
    
% \newenvironment{problembox}{\begin{mdframed}[backgroundcolor=WildStrawberry!10,linecolor=RedViolet,linewidth=0.3mm,topline=true,bottomline=true,leftline=true,rightline=true,
%     innertopmargin=3pt,
%     innerbottommargin=2pt,
%     innerrightmargin=5pt,
%     innerleftmargin=5pt]}{\end{mdframed}}

\newenvironment{problembox}{}{}
    
\theoremstyle{dylanwalk}

%%added walk for walkthroughs 
\newtheorem*{walk}{Walkthrough} % always use the enumerate environment during walkthroughs

% \def\walk{\noindent {\color{PineGreen}\sffamily\bfseries Walkthrough. }\hspace*{2mm}}

\usetikzlibrary{calc}
\usepackage{fourier-orns}
\definecolor{warningColor}{HTML}{FF1414}
\tikzset{
  warningsymbol/.style={
      circle,
      draw=white,
      fill=white,
      scale=1,
      overlay}
}

\mdfdefinestyle{warning}{%
 hidealllines=true,leftline=true,
 skipabove=12,skipbelow=12pt,
 innertopmargin=0.2em,%
 innerbottommargin=0.2em,%
 innerrightmargin=0.2em,%
 rightmargin=0.1em,%
 innerleftmargin=1.7em,%
 leftmargin=0.1em,%
 middlelinewidth=.2em,%
 linecolor=warningColor,%
 fontcolor=warningColor,%
 firstextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[warningsymbol] {\warning};},%
 secondextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[warningsymbol] {\warning};},%
 middleextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[warningsymbol] {\warning};},%
 singleextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[warningsymbol] {\warning};},%
}

\newmdenv[style=warning]{caution}

\newcounter{question}
\newenvironment{question}{
\refstepcounter{question}\label{q\thequestion}%
\noindent%
\begin{addmargin}[0em]{0em}
  \makebox[0pt][r]{\tikz[baseline=(text.base)]{
    \coordinate (box top left) at (0, 0);
    \coordinate (box bottom right) at (3em, 1.2\baselineskip);
    \path[use as bounding box] (box top left) rectangle (box bottom right);
    \fill[opacity=0.1, RawSienna] (box top left) rectangle (box bottom right) node[midway, anchor=center](textpoint){};
    \node[anchor=center, text=RawSienna](text) at (textpoint) {\sffamily\arabic{question}};
    \path[draw=RawSienna, thick] let \p1 = (box top left), \p2 = (box bottom right) in (\p1) -- (\x2, \y1);
  }\hspace{1em}}%
}{
\end{addmargin}
\filbreak
}

\theoremstyle{dylanclaim}
\newmdtheoremenv[% settings
backgroundcolor=NavyBlue!5,
linecolor=NavyBlue!90!black,
linewidth=1mm,
nobreak=false,
innerleftmargin=5pt,
innerrightmargin=5pt,
topline=false,
bottomline=false,
rightline=false,
leftline=true]{claim}{Claim}
\fi
\fi

\usepackage{minted}
\usemintedstyle{manni}

\ifdylanadidarkmode
\newenvironment{boxpar}[1][]{%
\begin{mdframed}[nobreak=false,backgroundcolor=black,linecolor=white]\vspace*{-0.5cm}\paragraph{\color{\maincolor}\sffamily #1}\color{white}
}{\end{mdframed}}

\usetikzlibrary{calc,arrows}
\tikzset{
    excursus arrow/.style={%
        line width=2pt,
        draw=\secondcolor,
        rounded corners=2ex,
    },
    excursus head/.style={
        fill=black,
        font=\bfseries\sffamily,
        text=white,
        anchor=base west,
    },
}

\mdfdefinestyle{arrowbox}{%
    singleextra={%
        \path[fill=black] let \p1=(P), \p2=(O) in (\x2,\y1) coordinate (Q);
        \path[fill=black] let \p1=(Q), \p2=(O) in (\x1,{(\y1-\y2)/2}) coordinate (M);
        \path [excursus arrow, round cap-to]
        ($(O)+(5em,0ex)$) -| (M) |- %
        ($(Q)+(12em,0ex)$) .. controls +(0:16em) and +(185:6em) .. %
        ++(23em,2ex);
        % \node [excursus head] at ($(Q)+(2.5em,-0.75pt)$) {Theorem};
        },
    firstextra={%
        \path[fill=black] let \p1=(P), \p2=(O) in (\x2,\y1) coordinate (Q);
        \path[fill=black] [excursus arrow,-to]
        (O) |- %
        ($(Q)+(12em,0ex)$) .. controls +(0:16em) and +(185:6em) .. %
        ++(23em,2ex);
        % \node [excursus head] at ($(Q)+(2.5em,-2pt)$) {Theorem};
        },
    secondextra={%
        \path[fill=black] let \p1=(P), \p2=(O) in (\x2,\y1) coordinate (Q);
        \path[fill=black] [excursus arrow,round cap-]
        ($(O)+(5em,0ex)$) -| (Q);},
    middleextra={%
        \path[fill=black] let \p1=(P), \p2=(O) in (\x2,\y1) coordinate (Q);
        \path [excursus arrow]
        (O) -- (Q);},
    middlelinewidth=1.5em,middlelinecolor=black,
    hidealllines=true,topline=true,
    innertopmargin=0ex,
    innerbottommargin=2ex,
    innerrightmargin=2ex,
    innerleftmargin=2ex,
    skipabove=0.87\baselineskip,
    skipbelow=0.62\baselineskip,
}

\declaretheoremstyle[
	headfont=\sffamily\bfseries\color{\secondcolor},
	mdframed={style=arrowbox,backgroundcolor=black},
	headpunct={},
	postheadspace={0pt}
]{arrows}

\declaretheorem[style=arrows,name=Notation,numbered=no]{notationbox}

\newenvironment{notation}{
\begin{notationbox}~
\color{white}
\begin{itemize}    
}{
\end{itemize}
\end{notationbox}
}
\else
\newenvironment{boxpar}[1][]{%
\begin{mdframed}[nobreak=false]\vspace*{-0.5cm}\paragraph{\color{\maincolor}\sffamily #1}
}{\end{mdframed}}

\usetikzlibrary{calc,arrows}
\tikzset{
    excursus arrow/.style={%
        line width=2pt,
        draw=\secondcolor,
        rounded corners=2ex,
    },
    excursus head/.style={
        fill=white,
        font=\bfseries\sffamily,
        text=black!80,
        anchor=base west,
    },
}

\mdfdefinestyle{arrowbox}{%
    singleextra={%
        \path let \p1=(P), \p2=(O) in (\x2,\y1) coordinate (Q);
        \path let \p1=(Q), \p2=(O) in (\x1,{(\y1-\y2)/2}) coordinate (M);
        \path [excursus arrow, round cap-to]
        ($(O)+(5em,0ex)$) -| (M) |- %
        ($(Q)+(12em,0ex)$) .. controls +(0:16em) and +(185:6em) .. %
        ++(23em,2ex);
        % \node [excursus head] at ($(Q)+(2.5em,-0.75pt)$) {Theorem};
        },
    firstextra={%
        \path let \p1=(P), \p2=(O) in (\x2,\y1) coordinate (Q);
        \path [excursus arrow,-to]
        (O) |- %
        ($(Q)+(12em,0ex)$) .. controls +(0:16em) and +(185:6em) .. %
        ++(23em,2ex);
        % \node [excursus head] at ($(Q)+(2.5em,-2pt)$) {Theorem};
        },
    secondextra={%
        \path let \p1=(P), \p2=(O) in (\x2,\y1) coordinate (Q);
        \path [excursus arrow,round cap-]
        ($(O)+(5em,0ex)$) -| (Q);},
    middleextra={%
        \path let \p1=(P), \p2=(O) in (\x2,\y1) coordinate (Q);
        \path [excursus arrow]
        (O) -- (Q);},
    middlelinewidth=1.5em,middlelinecolor=white,
    hidealllines=true,topline=true,
    innertopmargin=0ex,
    innerbottommargin=2ex,
    innerrightmargin=2ex,
    innerleftmargin=2ex,
    skipabove=0.87\baselineskip,
    skipbelow=0.62\baselineskip,
}

\declaretheoremstyle[
	headfont=\sffamily\bfseries\color{\secondcolor},
	mdframed={style=arrowbox},
	headpunct={},
	postheadspace={0pt}
]{arrows}

\declaretheorem[style=arrows,name=Notation,numbered=no]{notationbox}

\newenvironment{notation}{
\begin{notationbox}~
\begin{itemize}    
}{
\end{itemize}
\end{notationbox}
}
\fi

\newenvironment{keywords}{\begin{abstract} \sffamily\small \textbf{Keywords:}}{\end{abstract}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Theorem
\newcounter{theo}[section] \setcounter{theo}{0}
\renewcommand{\thetheo}{\thetheorem}
\newenvironment{theo}[1][]{%
\refstepcounter{theorem}%
\ifstrempty{#1}%
{\mdfsetup{%
frametitle={%
\tikz[baseline=(current bounding box.east),outer sep=0pt]
\node[anchor=east,rectangle,fill=blue!20]
{\strut \sffamily \color{blue!70!black} Theorem~\thetheo};}}
}%
{\mdfsetup{%
frametitle={%
\tikz[baseline=(current bounding box.east),outer sep=0pt]
\node[anchor=east,rectangle,fill=blue!20]
{\strut \sffamily \color{blue!70!black} Theorem~\thetheo~(#1)};}}%
}%
\mdfsetup{innertopmargin=10pt,linecolor=blue!20,%
linewidth=2pt,topline=true,%
frametitleaboveskip=\dimexpr-\ht\strutbox\relax
}
\begin{mdframed}[]\relax%
}{\end{mdframed}}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Example
\newcounter{exam}[section] \setcounter{exam}{0}
\renewcommand{\theexam}{\thetheorem}
\newenvironment{exam}[1][]{%
\refstepcounter{theorem}%
\ifstrempty{#1}%
{\mdfsetup{%
frametitle={%
\tikz[baseline=(current bounding box.east),outer sep=0pt]
\node[anchor=east,rectangle,fill=green!20]
{\strut \sffamily \color{ForestGreen!70!black} Example~\theexam};}}
}%
{\mdfsetup{%
frametitle={%
\tikz[baseline=(current bounding box.east),outer sep=0pt]
\node[anchor=east,rectangle,fill=green!20]
{\strut \sffamily \color{ForestGreen!70!black} Example~\theexam~(#1)};}}%
}%
\mdfsetup{innertopmargin=10pt,linecolor=green!20,%
linewidth=2pt,topline=true,%
frametitleaboveskip=\dimexpr-\ht\strutbox\relax
}
\begin{mdframed}[]\relax%
}{\end{mdframed}}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Definition
\newcounter{defi}[section]\setcounter{defi}{0}
\renewcommand{\thedefi}{\thetheorem}
\newenvironment{defi}[1][]{%
\refstepcounter{theorem}%
\ifstrempty{#1}%
{\mdfsetup{%
frametitle={%
\tikz[baseline=(current bounding box.east),outer sep=0pt]
\node[anchor=east,rectangle,fill=red!20]
{\strut \sffamily \color{red!70!black} Definition~\thedefi};}}
}%
{\mdfsetup{%
frametitle={%
\tikz[baseline=(current bounding box.east),outer sep=0pt]
\node[anchor=east,rectangle,fill=red!20]
{\strut \sffamily \color{red!70!black} Definition~\thedefi~(#1)};}}%
}%
\mdfsetup{innertopmargin=10pt,linecolor=red!20,%
linewidth=2pt,topline=true,%
frametitleaboveskip=\dimexpr-\ht\strutbox\relax
}
\begin{mdframed}[]\relax%
}{\end{mdframed}}

%%%%%%%
%PROBLEMS%
%%%%%%%

\RequirePackage{adjustbox} % needs adjustbox

\newcommand{\pawnB}[1][1.3ex]{%
\adjustbox{Trim=4.3pt 2.6pt 4.3pt 0pt,width=#1,raise=-0.15ex,margin=0.1ex 0ex 0.1ex 0ex}{\BlackPawnOnWhite}%
}%
\newcommand{\rookB}[1][1.58ex]{%
\adjustbox{Trim=3.2pt 2.2pt 3.2pt 0pt,width=#1,raise=-0.2ex,margin=0.1ex 0ex 0.1ex 0ex}{\BlackRookOnWhite}%
}%
\newcommand{\knightB}[1][1.85ex]{%
\adjustbox{Trim=2.3pt 2.35pt 2.5pt 0pt,width=#1,raise=-0.03ex,margin=0.14ex 0ex 0.14ex 0ex}{\BlackKnightOnWhite}%
}%
\newcommand{\bishopB}[1][1.79ex]{%
\adjustbox{Trim=2.3pt 2pt 2.3pt 0pt,width=#1,raise=-0.12ex,margin=0.1ex 0ex 0.1ex 0ex}{\BlackBishopOnWhite}%
}%
\newcommand{\queenB}[1][2.05ex]{%
\adjustbox{Trim=1.2pt 2.2pt 1.2pt 0pt,width=#1,raise=-0.08ex,margin=0.1ex 0ex 0.1ex 0ex}{\BlackQueenOnWhite}%
}%
\newcommand{\kingB}[1][1.95ex]{%
\adjustbox{Trim=2pt 2pt 2pt 0pt,width=#1,raise=-0.06ex,margin=0.13ex 0ex 0.13ex 0ex}{\BlackKingOnWhite}%
}%

% convenience macros

\newcommand{\probSymb}{\pawnB}
\newcommand{\reqSymb}{\rookB}

% page setup

\newcommand{\problems}{\pagebreak\section{Problems}}

\ifdylanadidarkmode
\newcommand{\psetquote}[2] % BE CAREFUL WITH THIS. must be DIRECTLY after minpt
{
\begin{flushright}
\begin{tikzpicture}
\draw (0,0) node [right,text width=8.75cm]{
\begin{mdframed}[linecolor=\maincolor!30,leftline=true,rightline=false,bottomline=false,topline=false,linewidth=3pt,backgroundcolor=\maincolor!30!black]
{\sffamily\color{white}``#1''}

\vspace{1mm}

\hfill\color{\maincolor!70}\textit{#2}
\end{mdframed}
};

\end{tikzpicture}
\end{flushright}
}
\else
\newcommand{\psetquote}[2] % BE CAREFUL WITH THIS. must be DIRECTLY after minpt
{
\begin{flushright}
\begin{tikzpicture}
\draw (0,0) node [right,text width=8.75cm]{
\begin{mdframed}[linecolor=\maincolor!90,leftline=true,rightline=false,bottomline=false,topline=false,linewidth=3pt,backgroundcolor=\maincolor!5]
{\sffamily``#1''}

\vspace{1mm}

\hfill\color{\maincolor!70!black}\textit{#2}
\end{mdframed}
};

\end{tikzpicture}
\end{flushright}
}
\fi

% actual problems

\newcounter{probcnt}

\ifdylanadinopts
\newcommand{\minpt}[1]{}

\newcommand{\prob}[3][]{
\stepcounter{Problem}
{
{\noindent\notofont\color{\maincolor}\textbf{Problem \theProblem\if\relax\detokenize{#2}\else\hspace{3pt}(#2)\fi.}}{\hspace{3pt}#3}
\vspace{0.2cm}
}
}

\newcommand{\req}[3][]{
\stepcounter{Problem}
{\noindent
{\notofont\color{\maincolor}\textbf{Problem \theProblem\if\relax\detokenize{#2}\else\hspace{3pt}(#2)\fi.}}{\hspace{3pt}#3}
\vspace{0.2cm}
}
}
\else
\newcommand{\minpt}[1]{\noindent\textsf{Minimum is {\color{\maincolor}\notofont\bfseries[#1\,\probSymb]}. Problems denoted with {\color{\maincolor!50!white}\reqSymb} are required. (They still count towards the point total.)}}

\newcommand{\prob}[3][]{
\stepcounter{Problem}
{\noindent
{\notofont\color{\maincolor}\if\relax\detokenize{#1}\else\textbf{\small{[#1\,\probSymb}]} \fi \textbf{Problem \theProblem\if\relax\detokenize{#2}\else\hspace{3pt}(#2)\fi.}}{\hspace{3pt}#3}
\vspace{0.2cm}
}
}

\newcommand{\req}[3][]{
\stepcounter{Problem}
{\noindent
{\notofont\color{\maincolor!50!white}\if\relax\detokenize{#1}\else\textbf{\small{[#1\,\reqSymb]}} \fi \textbf{Problem \theProblem\if\relax\detokenize{#2}\else\hspace{3pt}(#2)\fi.}}{\hspace{3pt}#3}
\vspace{0.2cm}
}
}
\fi

\renewcommand{\problem}[2][]{
\prob{#1}{#2}
}

\usepackage{marvosym}
\tikzset{
  lightningsymbol/.style={
      circle,
      scale=1,
      overlay}
}
\ifdylanadidarkmode
\newenvironment{hardbox}{\begin{mdframed}[backgroundcolor=\maincolor!30!black,linecolor=\maincolor!30,linewidth=1mm,topline=false,bottomline=false,leftline=true,rightline=false,
    innertopmargin=3pt,
    innerbottommargin=2pt,
    innerrightmargin=5pt,
    innerleftmargin=5pt,firstextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[lightningsymbol] {\Huge\hspace*{-1cm}\textcolor{\maincolor}{\Lightning}};},
    secondextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[lightningsymbol] {\Huge\hspace*{-1cm}\textcolor{\maincolor}{\Lightning}};},
    middleextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[lightningsymbol] {\Huge\hspace*{-1cm}\textcolor{\maincolor}{\Lightning}};},
    singleextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[lightningsymbol] {\Huge\hspace*{-1cm}\textcolor{\maincolor}{\Lightning}};},]\color{white}}{\end{mdframed}}
\else
\newenvironment{hardbox}{\begin{mdframed}[backgroundcolor=\maincolor!10,linecolor=\maincolor,linewidth=1mm,topline=false,bottomline=false,leftline=true,rightline=false,
    innertopmargin=3pt,
    innerbottommargin=2pt,
    innerrightmargin=5pt,
    innerleftmargin=5pt,firstextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[lightningsymbol] {\Huge\hspace*{-1cm}\textcolor{\maincolor}{\Lightning}};},
    secondextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[lightningsymbol] {\Huge\hspace*{-1cm}\textcolor{\maincolor}{\Lightning}};},
    middleextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[lightningsymbol] {\Huge\hspace*{-1cm}\textcolor{\maincolor}{\Lightning}};},
    singleextra={\path let \p1=(P), \p2=(O) in ($(\x2,0)+0.5*(0,\y1)$) 
                           node[lightningsymbol] {\Huge\hspace*{-1cm}\textcolor{\maincolor}{\Lightning}};},]}{\end{mdframed}}
\fi


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%fakesection Asymptote setup
\ifdylanadiasy
	\ifdylanadipatchasy
		\usepackage{patch-asy}
	\else
		\usepackage{asymptote}
	\fi
	\begin{asydef}
		defaultpen(fontsize(10pt));
		size(8cm); // set a reasonable default
		usepackage("amsmath");
		usepackage("amssymb");
		usepackage("mathpazo");
		settings.tex="pdflatex";
		settings.outformat="pdf";
		// Replacement for olympiad+cse5 which is not standard
		import geometry;
		// recalibrate fill and filldraw for conics
		void filldraw(picture pic = currentpicture, conic g, pen fillpen=defaultpen, pen drawpen=defaultpen)
			{ filldraw(pic, (path) g, fillpen, drawpen); }
		void fill(picture pic = currentpicture, conic g, pen p=defaultpen)
			{ filldraw(pic, (path) g, p); }
		// some geometry
		pair foot(pair P, pair A, pair B) { return foot(triangle(A,B,P).VC); }
		pair orthocenter(pair A, pair B, pair C) { return orthocentercenter(A,B,C); }
		pair centroid(pair A, pair B, pair C) { return (A+B+C)/3; }
		// cse5 abbrevations
		path CP(pair P, pair A) { return circle(P, abs(A-P)); }
		path CR(pair P, real r) { return circle(P, r); }
		pair IP(path p, path q) { return intersectionpoints(p,q)[0]; }
		pair OP(path p, path q) { return intersectionpoints(p,q)[1]; }
		path Line(pair A, pair B, real a=0.6, real b=a) { return (a*(A-B)+A)--(b*(B-A)+B); }
		// cse5 more useful functions
		picture CC() {
			picture p=rotate(0)*currentpicture;
			currentpicture.erase();
			return p;
		}
		pair MP(Label s, pair A, pair B = plain.S, pen p = defaultpen) {
			Label L = s;
			L.s = "$"+s.s+"$";
			label(L, A, B, p);
			return A;
		}
		pair Drawing(Label s = "", pair A, pair B = plain.S, pen p = defaultpen) {
			dot(MP(s, A, B, p), p);
			return A;
		}
		path Drawing(path g, pen p = defaultpen, arrowbar ar = None) {
			draw(g, p, ar);
			return g;
		}
		
		///////////////////////////////////////////////////
        // Olympiad Asymptote Package
        // By Maria Monks and AoPS community
        // Last Updated: 08/26/2007
        /////////////////////////////////////////////////////
        
        // This package contains many constructions and calculations  
        // that often come up in Olympiad-level Geometry problems.
        //
        
        include graph;
        include math;
        real markscalefactor=0.03;
        
        ///////////////////////////////////////////
        // USEFUL POINTS
        ///////////////////////////////////////////
        
        // Substitutes origin for (0,0) for ease of notation:
        pair origin;
        origin=(0,0);
        
        // The point r of the way along path p with respect to arc length, where r is a real value between 0 and 1 inclusive:
        pair waypoint(path p, real r)
        { 
            return point(p,reltime(p,r));
        }
        
        // The midpoint of path p:
        pair midpoint(path p){ return waypoint(p,.5);}
        
        // The foot of the perpendicular from P to line AB:
        pair foot(pair P,pair A, pair B)
        { 
            real s; 
            s=dot(P-A,unit(B-A)); 
            return (scale(s)*unit(B-A)+A);
        }
        
        // The point on the angle bisector of <ABC that is a unit distance from B.
        // If only two points A and B are specified, the function returns a point
        // on the perpendicular bisector of AB, a unit distance from the segment. 
        pair bisectorpoint(pair A ... pair[] BC)
        {
            pair P,B,C,M; 
            if (BC.length==1) 
            {  
                B=BC[0];  
                M=midpoint(A--B);  
                P=unit(rotate(90,M)*A-M)+M; 
            } 
            else if (BC.length==2) 
            {  
                B=BC[0];  
                C=BC[1];  
                P=unit(midpoint((unit(A-B)+B)--(unit(C-B)+B))-B)+B; 
            } 
            return P;
        }
        
        ///////////////////////////////////////////
        // CIRCLES
        ///////////////////////////////////////////
        
        // CIRCUMCIRCLE: //
        
        // The circumcenter of triangle ABC:
        pair circumcenter(pair A=(0,0), pair B=(0,0), pair C=(0,0))
        { 
            pair M,N,P,Q; 
            M=midpoint(A--B); 
            N=midpoint(B--C); 
            P=rotate(90,M)*A; 
            Q=rotate(90,N)*B; 
            return extension(M,P,N,Q);
        }
        
        // The circumradius of triangle ABC:
        real circumradius(pair A,pair B,pair C)
        { 
            return abs(circumcenter(A,B,C)-A);
        }
        
        // The circumcircle of triangle ABC:
        guide circumcircle(pair A=(0,0), pair B=(0,0), pair C=(0,0))
        { 
            return Circle(circumcenter(A,B,C),circumradius(A,B,C));
        }
        
        // INCIRCLE: //
        
        // The incenter of triangle ABC:
        pair incenter(pair A=(0,0), pair B=(0,0), pair C=(0,0))
        { 
            pair P,Q; 
            P=rotate((angle(C-A)-angle(B-A))*90/pi,A)*B; 
            Q=rotate((angle(A-B)-angle(C-B))*90/pi,B)*C; 
            return extension(A,P,B,Q);
        }
        
        // The inradius of triangle ABC:
        real inradius(pair A,pair B,pair C)
        { 
            real a,b,c,s; 
            a=abs(B-C); 
            b=abs(A-C); 
            c=abs(B-A); 
            s=(a+b+c)/2; 
            return sqrt(s*(s-a)*(s-b)*(s-c))/s;}
        
        // The inscribed circle of triangle ABC:
        guide incircle(pair A=(0,0), pair B=(0,0), pair C=(0,0))
        { 
            return Circle(incenter(A,B,C),inradius(A,B,C));
        }
        
        // The nth point of tangency from a point P to the circle with center O and radius r
        // where n can be 1 or 2 - the points of tangency are labeled in counterclockwise order around the circle.
        // If P is inside the circle, the center of the circle is returned rather than an error.
        pair tangent(pair P, pair O, real r, int n=1)
        {  
            real d,R;  
            pair X,T;  
            d=abs(P-O);  
            if (d<r) return O;  
            R=sqrt(d^2-r^2);  
            X=intersectionpoint(circle(O,r),O--P);  
            if (n==1)
            {    
                T=intersectionpoint(circle(P,R),Arc(O,r,degrees(X-O),degrees(X-O)+180));    
            }  
            else if (n==2)
            {    
                T=intersectionpoint(circle(P,R),Arc(O,r,degrees(X-O)+180,degrees(X-O)+360));    
            }  
            else {T=O;}  
            return T;
        }
        
        // Returns true if ABCD is a cyclic quadrilateral
        // Tests if the circumcenters of ABC and ABD are equal within 10^(-5) 
        bool cyclic(pair A, pair B, pair C, pair D) 
        { 
            if (abs(circumcenter(A,B,C).x-circumcenter(A,B,D).x)<1/10^(5) && abs(circumcenter(A,B,C).y-circumcenter(A,B,D).y)<1/10^(5)) return true;
            else return false; 
        }
        
        ///////////////////////////////////////////
        // COLLINEARITY AND CONCURRENCY
        ///////////////////////////////////////////
        
        // Returns true if the lines AB, CD, EF are concurrent 
        // within 10^(-5) (to avoid approximation errors),
        // or if AB, CD, EF are mutually parallel, intersecting at infinity.
        bool concurrent(pair A, pair B, pair C, pair D, pair E, pair F)
        { 
            if ( abs(extension(A,B,C,D).x-extension(C,D,E,F).x)<1/10^(5) &&       
                 abs(extension(A,B,C,D).y-extension(C,D,E,F).y)<1/10^(5) ||     
                 (extension(A,B,C,D)==(infinity,infinity) && 
                 (infinity,infinity)==extension(C,D,E,F))) 
            return true; 
            else return false;
        }
        
        // Returns true if points A, B, and C are collinear.
        bool collinear(pair A, pair B, pair C)
        { 
            if (A==B || B==C || A==C || abs(unit(B-A)-unit(C-A))<1/10^5 || abs(unit(B-A)+unit(C-A))<1/10^5)  
            return true; 
            else return false;
        }
        
        ///////////////////////////////////////////
        // TRIANGLES AND ASSOCIATED POINTS
        ///////////////////////////////////////////
        
        // The centroid of triangle ABC:
        pair centroid(pair A, pair B, pair C)
        { 
            return (A+B+C)/3;
        }
        
        // The orthocenter of triangle ABC:
        pair orthocenter(pair A, pair B, pair C)
        { 
        return extension(A,foot(A,B,C),B,foot(B,A,C));
        }
        
        ///////////////////////////////////////////
        // TICKMARKS AND ANGLE MARKS
        ///////////////////////////////////////////
        
        // Returns a right angle mark at B given a right angle ABC
        // The optional argument s specifies the side length of the mark in ps points:
        
        path rightanglemark(pair A, pair B, pair C, real s=8)
        { 
            pair P,Q,R; 
            P=s*markscalefactor*unit(A-B)+B; 
            R=s*markscalefactor*unit(C-B)+B; 
            Q=P+R-B; 
            return P--Q--R;
        }
        
        // Returns an angle mark on angle ABC consisting of several arcs centered at B.
        // The optional arguments t, s[] specify the radius of the arcs in increasing order:
        path anglemark(pair A, pair B, pair C, real t=8 ... real[] s)
        { 
            pair M,N,P[],Q[]; 
            path mark; 
            int n=s.length;
            M=t*markscalefactor*unit(A-B)+B; 
            N=t*markscalefactor*unit(C-B)+B; 
            for (int i=0; i<n; ++i)  
            {  
                P[i]=s[i]*markscalefactor*unit(A-B)+B;  
                Q[i]=s[i]*markscalefactor*unit(C-B)+B; 
            } 
            mark=arc(B,M,N); 
            for (int i=0; i<n; ++i) 
            {  
                if (i%2==0)  
                {   
                    mark=mark--reverse(arc(B,P[i],Q[i]));  
                }  
                else  
                {   
                    mark=mark--arc(B,P[i],Q[i]);   
                } 
            } 
            if (n%2==0 && n!=0) 
            mark=(mark--B--P[n-1]); 
            else if (n!=0) 
            mark=(mark--B--Q[n-1]); 
            else mark=(mark--B--cycle); 
            return mark;
        }
        
        // A picture marking a path g with n ticks spaced spacing apart, with length s in ps points
        // such that the middle tick mark (or one of the two if n is even) is normal to g
        // and located r of the way along path g:
        picture pathticks(path g, int n=1, real r=.5, real spacing=6, real s=8, pen p=currentpen)
        { 
            picture pict; 
            pair A,B,C,direct; 
            real t,l=arclength(g), space=spacing*markscalefactor, halftick=s*markscalefactor/2, startpt; 
            if (n>0) 
            {  
                direct=unit(dir(g,arctime(g,r*l)));  
                startpt=r*l-(n-1)/2*space;  
                for (int i=0; i<n; ++i)  
                {  
                    t=startpt+i*space;  
                    B=point(g,arctime(g,t))+(0,1)*halftick*direct;  
                    C=B+2*(0,-1)*halftick*direct;  
                    draw(pict,B--C,p);  
                } 
            } 
            return pict;
        }
		
		// cse5.asy: Version 4.1 of 03/28/2008

        import graph;
        import math;
        
        //Adjustable variables
        
        pair nullpair=(1.2345,6.7890);
        pair messageplace=(0,5);
        pen pointpen=black,pathpen=black,
            errorpen=yellow+linewidth(2),
            pointfontpen=black,pathfontpen=black,
            anglepen=green,anglefontpen=black,nullpen=rgb(204, 255, 153);
        
        int pointfontsize=11;
        int pathfontsize=13;
        int anglefontsize=9;
        
        bool fullbreak=false;
        bool pathflag=true;
        real markscalefactor=0.03;
        
        //Auxiliary variables 
        
        bool breakflag=false;
        // The point r of the way along path p with respect to arc length, where r is a real value between 0 and 1 inclusive:
        pair WP(path p, real r)
        { 
        	return point(p,reltime(p,r));
        }
        
        // The midpoint of path p:
        pair M(path p){ return WP(p,.5);}
        
        pair M(pair A, pair B)
        {
        if((A==nullpair)||(B==nullpair)) return nullpair;
        return WP(A--B,.5);
        }
        
        pair F(pair P,pair A, pair B)
        { 
        	real s; 
        	s=dot(P-A,unit(B-A)); 
        	return (scale(s)*unit(B-A)+A);
        }
        
        pair E(pair A, pair B, pair C, pair D)
        {
        return extension(A,B,C,D);
        }
        
        pair OC(pair A, pair B, pair C) {
        return extension (A,F(A,B,C),B,F(B,A,C));
        }
        
        path CD(path p, pen q=pathpen, real m=1, arrowbar ar=None)
        {
        import geometry;
        if (fullbreak&&breakflag) return p;
        if((m>0)&&pathflag) clipdraw(p,q,ar); 
        return p;
        }
        
        path MR(pair A, pair B, pair C, real s=8, pen p=pathpen)
        { 
        	pair P,Q,R; 
        	P=s*markscalefactor*unit(A-B)+B; 
        	R=s*markscalefactor*unit(C-B)+B; 
        	Q=P+R-B;
            draw(P--Q--R, p);
        	return P--Q--R;
        }
        
        
        
        path FRAM(pair A, pair B, pair C, real s=8, pen q=pathpen, pen p=nullpen)
        { 
        	pair P,Q,R,S; 
        	P=s*markscalefactor*unit(A-B)+B; 
        	R=s*markscalefactor*unit(C-B)+B; 
        	Q=P+R-B;
            if(p==nullpen) p=0.1*q+white;
            draw(P--Q--R, q);
            fill(P--Q--R--B--cycle, p);
        	return P--Q--R--B--cycle;
        }
        
        pair MES(pair A, pair B, real s=0.05, int m=1, pen q=pathpen)
        {
            /*real start = 0.5 - 0.01*m;
            for(int i=1; i<=m; i++) {
                D(IP(rotate(90,WP(P--D,start))*D--WP(P--D,start),CR(WP(P--D,start),s))--IP(rotate(270,WP(P--D,start))*D--WP(P--D,start),CR(WP(P--D,start),s)),black);
                start = start + 0.01;
            }*/
            return A;
        }
        
        // The circumcenter of triangle ABC:
        pair CCP(pair A=(0,0), pair B=(0,0), pair C=(0,0))
        { 
            pair M,N,P,Q; 
            M=M(A--B); 
            N=M(B--C); 
            P=rotate(90,M)*A; 
            Q=rotate(90,N)*B; 
            return E(M,P,N,Q);
        }
        
        // The circumradius of triangle ABC:
        real CCR(pair A,pair B,pair C)
        { 
            return abs(CCP(A,B,C)-A);
        }
        
        // The circumcircle of triangle ABC:
        guide CCC(pair A=(0,0), pair B=(0,0), pair C=(0,0))
        { 
            return Circle(CCP(A,B,C),CCR(A,B,C));
        }
        
        
        //Default size
        
        size(400);
        
        //A patch for the intersectionpoints bug
        
        
        pair [] intersect2paths (path A, path B)
        {
        pair[] points;
        if (length(A)==-1) return points;
        if (length(B)==-1) return points;
        int count=0;
        bool flag=true;
        path a=A,aa,at;
        if (cyclic(a)) a=subpath(a,0,reltime(a,0.997));
        real LA=arclength(a),t,l;
        for (int k=0; flag&&(k<100); ++k)
        {
        real[] times = intersect(a,B,LA/10^7);
        if (times.length==0) flag=false;
        else 
         {
         at=a;
         for(int m=0;(m<6)&&(times.length==2);++m)
          { 
          t=times[0]; aa=subpath(at,0,t);
          if (length(aa)>0) at=subpath(aa,0,t-1/300);
          times=intersect(at,B,LA/10^7);
          }
         l=arclength(a);
         if (l>0) a=subpath(a,reltime(a,arclength(aa)/l),length(a));
         points[count]=point(a,0);
         a=subpath(a,reltime(a,1/200),length(a));
         ++count;
         }
        if (arclength(a)<=LA/300) flag=false;
        }
        return points;
        }
        
        
        
        pair[] commonpoints(path[] A,path[] B)
        {
        pair[] output;
        int count=0;
        for(int k=0; k<A.length; ++k)
        for(int m=0; m<B.length; ++m)
         {
         pair[] temp=intersect2paths(A[k],B[m]);
         for (int n=0; n<temp.length; ++n)
          {
          output[count]=temp[n]; ++count;
          }
         }
        return output;
        }
        
        
        //Basic routines
        
        real d(pair A,pair B)
        {
        if ((A==nullpair)||(B==nullpair)) return -1;
        return sqrt((A.x-B.x)^2+(A.y-B.y)^2);
        }
        
        pair MP(real a=0, Label L, pair A, int f=pointfontsize,pair B=plain.S,pen p=pointfontpen)
        {
        if (fullbreak&&breakflag) return A;
        Label M=L;
        M.s="\("+L.s+"\)";
        int ff=f;
        if (f<4) ff=4;
        if (A!=nullpair) label(rotate(a)*M,A,B,fontsize(ff)+p); 
        return A;
        }
        
        path MC(real a=0, Label s,int f=pathfontsize,path P,real t=0.5,pair B=plain.N,pen p=pathfontpen)
        {
        if (length(P)==-1) return P;
        if (fullbreak&&breakflag) return P;
        real u=t;
        if (u>1) u=1;
        if (u<0) u=0;
        MP(a,s,point(P,reltime(P,u)),f,B,p);
        return P;
        }
        
        path D(path p, pen q=pathpen, real m=1, arrowbar ar=None)
        {
        if (fullbreak&&breakflag) return p;
        if((m>0)&&pathflag) draw(p,q,ar); 
        return p;
        }
        
        path[] DPA(path[] p, pen q=pathpen, real m=1)
        {
        if (fullbreak&&breakflag) return p;
        if((m>0)&&pathflag) draw(p,q); 
        return p;
        }
        
        pair D(real a=0, Label L="", int f=pointfontsize,
               pen pp=pointfontpen, pair p, pen q=pointpen, real m=1,pair B=plain.S)
        {
        if (fullbreak&&breakflag) return p;
        if ((p!=nullpair)&&(m>0)) dot(MP(a,L,p,f,B,pp),q);
        return p;
        }
        
        path CR(pair A, real R, real a=0, real b=360)
        {
        if((A==nullpair)||(R<=0)) return nullpath;
        if((a==0)&&(b==360)) return Circle(A,R);
        return Arc(A,R,a,b);
        }
        
        path CP(pair A, pair B, real a=0, real b=360)
        {
        if (B==nullpair) return nullpath;
        return CR(A,d(A,B),a,b);
        }
        
        path L(int k=0, pair A, pair B, real a=0.6, real b=a)
        {
        if((A==nullpair)||(B==nullpair)) return nullpath;
        if (k==0) return (a*(A-B)+A)--(b*(B-A)+B);
        if (k==1) return (a*unit(A-B)+A)--(b*unit(B-A)+B);
        if (k==2) return (a*(A-B)*(0,1)+(A+B)/2)--(b*(B-A)*(0,1)+(A+B)/2);
        if (k==3) return (a*unit(A-B)*(0,1)+(A+B)/2)--(b*unit(B-A)*(0,1)+(A+B)/2);
        return nullpath;
        }
        
        pair[] IPs(path[] A, path[] B)
        {
        return commonpoints(A,B);
        }
        
        pair IP(path[] A, path[] B, int m=0)
        {
        pair[] intpoints=commonpoints(A,B);
        int len=intpoints.length;
        if ((m>=len)||(m<0)) 
         { 
         if (fullbreak) 
          {
          bool tempflag=pathflag;
          pathflag=true;
          DPA(A,errorpen);
          DPA(B,errorpen);
          pathflag=tempflag;
          for(int k=0;k<len;++k) MP(string(k),D(intpoints[k],black),9,N);
          MP("\mbox{Paths have no common point with index }"+string(m),messageplace,9);
          }
         breakflag=true;
         return nullpair;
         }
        return intpoints[m];
        }
        
        pair OP(path[] A, path[] B)
        {
        return IP(A,B,1);
        } 
        
        pair WP(path P,real t=0.5)
        {
        if ((length(P)==-1)||(t>1.001)||(t<-0.001)) 
         {
         if (fullbreak) 
          {
          if(length(P)==-1) MP("\mbox{There are no points on nullpath}",messageplace,9); 
          else 
           {
           bool tempflag=pathflag;
           pathflag=true;
           D(P,errorpen);
           pathflag=tempflag;
           MP(string(t)+"\mbox{ is out of range }[0,1]",messageplace,9);
           }
          }
         breakflag=true;
         return nullpair;
         }
        if(t<0) t=0; if(t>1) t=1;
        return point(P,reltime(P,t));
        }
        
        picture CC()
        {
        picture p=rotate(0)*currentpicture;
        currentpicture.erase();
        return p;
        }
        
        pair MA (real a=0, Label s='',int f=anglefontsize,  
                 pen p=anglefontpen, pair B, pair A, pair C, real r, int m=1, pair S=nullpair, pen q=anglepen)
        {
        if ((A==nullpair)||(B==nullpair)||(C==nullpair)) return A;
        pair U=unit(B-A), V=unit(C-A);
        if ((U==(0,0))||(V==(0,0))) return A;
        path P=arc((0,0),U,V);
        pair D=WP(P),Q=S;
        if (Q==nullpair) Q=D;
        D=A+r*D;
        if (m<0) m=0;
        if (m<8)
         {
         int n=2*m-1; if (m==2) n=4; if (n>8) n=8;
         for(int k=0;k<m;++k) D(shift(A)*scale(r*(1-k/n))*P,q); 
         }
        if (m>7&&(!(fullbreak&&breakflag))&&pathflag) fill(A--shift(A)*scale(r)*P--cycle,q);
        MP(a,s,D,f,Q,p);
        return A;
        }
        
        picture p,q;
        
        //Basic routine long names
        
        real distance(pair A,pair B)=d;
        
        path Drawing(path p, pen q=pathpen, real m=1, arrowbar ar=None)=D;
        
        pair Drawing(real a=0, Label L="", int f=pointfontsize,
               pen pp=pointfontpen, pair p, pen q=pointpen, real m=1,pair B=plain.S)=D;
        
        path[] DrawPathArray(path[] p, pen q=pathpen, real m=1)=DPA;
        
        pair MarkPoint(real a=0, Label L, pair A, int f=pointfontsize,pair B=plain.S, pen p=pointfontpen)=MP;
        
        path CirclebyRadius(pair A, real R, real a=0, real b=360)=CR;
        
        path CirclebyPoint(pair A, pair B, real a=0, real b=360)=CP;
        
        path Line(int k=0, pair A, pair B, real a=0.6, real b=a)=L;
        
        pair[] IntersectionPoints(path[] A, path[] B)=IPs;
        
        pair IntersectionPoint(path[] A, path[] B, int m=0)=IP;
        
        pair OtherPoint(path[] A, path[] B)=OP; 
        
        path MarkCurve(real a=0, Label s,int f=pathfontsize,path P,real t=0.5,pair B=plain.N,pen p=pathfontpen)=MC;
        
        pair WayPoint(path P,real t=0.5)=WP;
        
        picture CopyClean()=CC;
        
        pair MarkAngle(real a=0,Label s='',int f=anglefontsize,  
                 pen p=anglefontpen, pair B, pair A, pair C, real r, int m=1, pair S=nullpair, pen q=anglepen)=MA;
	\end{asydef}
\fi
\ifdylanadithm
	\usepackage{amsthm}
\fi

%%fakesection BEGIN MAIN SETUP
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\ifdylanadisetup
	%%fakesection Set up author and date
	% \ifdylanadiauthor
	%	\AtBeginDocument {%
	%		\author{Dylan Yu}
	%		\date{\today}
	%	}
	% \fi
	%%fakesection Hyperref
	\ifdylanadipkg
		\PassOptionsToPackage{usenames,svgnames,dvipsnames}{xcolor}
		\usepackage{xcolor}
		\ifdylanadihref
			\usepackage[colorlinks=true]{hyperref}
			\hypersetup{urlcolor=RoyalPurple,linkcolor=Ultra,citecolor=SkyBlue2}
		\fi
		\usepackage[nameinlink]{cleveref}
	\fi

\definecolor{Purple06}{RGB}{029, 002, 053}
\definecolor{Purple05}{RGB}{038, 008, 065}
\definecolor{Purple04}{RGB}{048, 016, 078}
\definecolor{Purple03}{RGB}{056, 023, 090}
\definecolor{Purple02}{RGB}{064, 031, 104}
\definecolor{Purple01}{RGB}{072, 036, 118}
\definecolor{Violet001}{RGB}{120,100,163}
		
\fi


	\ifdylanadicolorsec
		\@ifundefined{KOMAClassName}{}{
			\@ifundefined{chapter}{}{
				 \addtokomafont{partprefix}{\rmfamily}
				\renewcommand*{\partformat}{\color{\secondcolor}
					\scalebox{2.5}{\thepart}\enlargethispage{2em}}
				\addtokomafont{chapterprefix}{\raggedleft}
				\RedeclareSectionCommand[beforeskip=0.4em]{chapter}
				\renewcommand*{\chapterformat}{\mbox{%
					\scalebox{1.5}{\chapappifchapterprefix{\nobreakspace}}%
					\scalebox{2.72}{\color{\maincolor}\thechapter}\enskip}}
			}
	
			
			\renewcommand*{\sectionformat}%
				{\color{\maincolor}\faEnvira\thesection\enskip}
			\renewcommand*{\subsectionformat}%
				{\color{\maincolor}\faEnvira\thesubsection\enskip}
			\renewcommand*{\subsubsectionformat}%
				{\color{\maincolor}\faEnvira\thesubsubsection\enskip}
			\KOMAoptions{numbers=noenddot}
% 			\usepackage[tocindentauto]{tocstyle}
% 			\usetocstyle{KOMAlike}
		}
	\fi


	%%fakesection Loads a bunch of useful packages (but allow disabling)
	\ifdylanadipkg
		\IfFileExists{von.sty}{\usepackage{von}}{}
		\usepackage{listings}
		\usepackage{mathrsfs}
		\usepackage{textcomp}
		\lstset{basicstyle=\footnotesize\ttfamily,
			numbers=left,
			numbersep=5pt,
			numberstyle=\tiny,
			keywordstyle=\bfseries,
			% title=\lstname,
			showstringspaces=false,
			tabsize=4,
			frame=single,
			keywordstyle=\bfseries\color{blue},
			commentstyle=\color{green!70!black},
			identifierstyle=\color{green!20!black},
			stringstyle=\color{orange},
			breaklines=true,
			breakatwhitespace=true,
			frame=none
		}
		\usepackage[shortlabels]{enumitem}
		% a list I like for walkthrough's --- Drew-style parts
		\usepackage[obeyFinal,textsize=scriptsize,shadow]{todonotes}
		\usepackage{textcomp}
		\usepackage{multirow}
		% Tiny tiny optimizations:
		\usepackage{mathtools}
		\usepackage{microtype}
	\fi

	%%fakesection \maketitle configuration
	\@ifundefined{KOMAClassName}%
		{} % do nothing outside KOMA class
		{% If KOMA exists. . .
		\addtokomafont{subtitle}{\Large\merri\color{\maincolor}}
		\setkomafont{author}{\Large\scshape}
		\setkomafont{date}{\Large\normalsize}
		}
	\providecommand{\thetitle}{\@title}
	\providecommand{\theauthor}{\@author}
	\providecommand{\thedate}{\@date}
	
	\RequirePackage{etoolbox} % used for patchcmd

    \patchcmd{\@maketitle}{\@title}{\merri\color{\maincolor}\bfseries\@title}{}{}
    \patchcmd{\@maketitle}{\@author}{\merri\@author}{}{}
    \patchcmd{\@maketitle}{\@date}{\merri\color{\maincolor}{\@date}}{}{}

	%%fakesection Commutative diagrams support
	\ifdylanadidiagrams
		\usepackage{diagrams}
		\newarrow{Inj}C--->
		\newarrow{Surj}----{>>}
		\newarrow{Proj}----{>>}
		\newarrow{Embed}>--->
		\newarrow{Incl}C--->
		\newarrow{Mapsto}|--->
		\newarrow{Isom}<--->
		\newarrow{Dotted}....>
		\newarrow{Dashed}{}{dash}{}{dash}>
		\newarrow{Line}-----
		\usepackage{tikz-cd}
		\usetikzlibrary{decorations.pathmorphing}
		\tikzcdset{row sep/normal=3.14em,column sep/normal=3.14em}
	\fi

	%%fakesection Page Setup
	\ifdylanadifancy
		\@ifundefined{KOMAClassName}
		{
		    \usepackage{fancyhdr}
			\setlength{\headheight}{0.75in}
			\setlength{\oddsidemargin}{0in}
			\setlength{\evensidemargin}{0in}
			\setlength{\voffset}{-1.0in}
			\setlength{\headsep}{10pt}
			\setlength{\textwidth}{6.5in}
			\setlength{\headwidth}{6.5in}
			\setlength{\textheight}{8.75in}
			\setlength{\parskip}{1ex plus 0.5ex minus 0.2ex}
			\setlength{\footskip}{0.3in}
			\ifdylanadihdr
				\renewcommand{\headrulewidth}{0.5pt}
				\renewcommand{\footrulewidth}{0.0pt}
				\pagestyle{fancy}
				\lhead{Dylan Yu}
				\chead{}
				\rhead{\nouppercase{\leftmark}}
				\lfoot{}
				\cfoot{\thepage}
				\rfoot{}
			\fi
		}
		
		
			\usepackage[headsepline]{scrlayer-scrpage}
			\renewcommand{\headfont}{}
			\addtolength{\textheight}{3cm}
			\setlength{\footskip}{0.2in}
			\setlength{\headsep}{10pt}
			\ihead{\sffamily\footnotesize\textbf{\theauthor} \textbf{\textcolor{\maincolor}{(\thedate )}}}
			\chead{}
			\cfoot{}
			\ohead{\sffamily\footnotesize\textbf{\thetitle}}
			\ofoot{\thepage}
		
		
		
		
	\fi

	%%fakesection Chinese support
	\ifdylanadichinese
		\usepackage[encapsulated]{CJK}
		\usepackage{ucs}
		\usepackage[utf8x]{inputenc}
		\newenvironment{bsmi}{\begin{CJK}{UTF8}{bsmi}}{\end{CJK}}
		\newcommand{\cn}[1]{\begin{bsmi}#1\end{bsmi}}
		\AtBeginDocument{\begin{CJK}{UTF8}{bsmi}}
		\AtEndDocument{\end{CJK}}
	\fi

	%%fakesection Hints
	\ifdylanadihints
		\usepackage{answers}
		\Newassociation{hint}{hintitem}{hints}
		\renewcommand{\solutionextension}{out}
		\Opensolutionfile{hints}
		\newcommand{\makehints}{\Closesolutionfile{hints}\input{hints.out}} % chktex 27
	\fi
%%fakesection END MAIN SETUP

\usepackage{multicol}
\usepackage{afterpage}
\usepackage{pagecolor}
\usepackage{ytableau}
\usepackage{tikzducks}
% \colorlet{titlepagecolor}{\maincolor}
\usepackage{multirow}
\usepackage{skak}
\usepackage{mdframed}

\usetikzlibrary{arrows, automata}

\newcommand\titlepagedecoration{%
\begin{tikzpicture}[remember picture,overlay,shorten >= -10pt]

\coordinate (aux1) at ([yshift=-15pt]current page.north east);
\coordinate (aux2) at ([yshift=-410pt]current page.north east);
\coordinate (aux3) at ([xshift=-4.5cm]current page.north east);
\coordinate (aux4) at ([yshift=-150pt]current page.north east);

\begin{scope}[\maincolor!63,line width=12pt,rounded corners=12pt]

\draw[\maincolor!63]
  (aux1) -- coordinate (a) 
  ++(225:5) --
  ++(-45:5.1) coordinate (b);
\draw[shorten <= -10pt]
  (aux3) --
  (a) --
  (aux1);
\draw[opacity=0.6,\secondcolor!50!\maincolor,shorten <= -10pt]
  (b) --
  ++(225:2.2) --
  ++(-45:2.2);
\end{scope}
\draw[\maincolor!70!\secondcolor,line width=8pt,rounded corners=8pt,shorten <= -10pt]
  (aux4) --
  ++(225:0.8) --
  ++(-45:0.8);
\begin{scope}[\secondcolor!70,line width=6pt,rounded corners=8pt]
\draw[shorten <= -10pt]
  (aux2) --
  ++(225:3) coordinate[pos=0.45] (c) --
  ++(-45:3.1);
\draw[\secondcolor!80!\maincolor]
  (aux2) --
  (c) --
  ++(135:2.5) --
  ++(45:2.5) --
  ++(-45:2.5) coordinate[pos=0.3] (d);   
\draw[\secondcolor!65!\maincolor]
  (d) -- +(45:1);
  
\end{scope}
\end{tikzpicture}%
}

\usepackage[prefix=]{xcolor-material}
\pgfmathdeclarerandomlist{material}{%
{Red}{Blue}{Green}}
\tikzset{%
  half clip/.code={
    \clip (0, -256) rectangle (256, 256);
  },
  color/.code=\colorlet{fill color}{#1},
  color alias/.code args={#1 as #2}{\colorlet{#1}{#2}},
  colors alias/.style={color alias/.list/.expanded={#1}},
  execute/.code={#1},
  on left/.style={.. on left/.style={#1}},
  on right/.style={.. on right/.style={#1}},
  split/.style args={#1 and #2}{
    on left ={color alias=fill color as #1},
    on right={color alias=fill color as #2, half clip}
  }
}
\newcommand\reflect[2][]{%
\begin{scope}[#1]\foreach \side in {-1, 1}{\begin{scope}
\ifnum\side=-1 \tikzset{.. on left/.try}\else\tikzset{.. on right/.try}\fi
\begin{scope}[xscale=\side]#2\end{scope}
\end{scope}}\end{scope}}

\tikzset{%
squid/.pic={
\begin{scope}[x=3cm/480,y=3cm/480]
\useasboundingbox (-256, -256) (256, 256);
\reflect[split={DeepOrange500 and DeepOrange700}]{
  \fill [fill color] (0,96) ellipse [x radius=97, y radius=127];
  \fill [fill color]
    (72,-16)
    .. controls ++(270:72) and ++(270:40) .. ++(108,  -16)
    .. controls ++( 90:64) and ++(270:64) .. ++(-40,128)
    .. controls ++( 90:32) and ++(270:32) .. ++( 40, 96)
    arc (180:0:4)
    .. controls ++(270: 32) and ++( 90: 32) .. ++(-24, -96)
    .. controls ++(270: 64) and ++( 90: 64) .. ++( 56,-128)
    .. controls ++(270:128) and ++(270:160) ..   (  0, -16);
  \fill [fill color]  (64, 16) circle [radius=48];
  \fill [Grey50]      (64, 16) circle [radius=32];
  \fill [BlueGrey900] (64, 16) circle [radius=12];
  \fill [fill color]  (-4, -20)
    .. controls ++(270:256) and ++(225: 64) .. (128,-192)
    arc (315:495:4)
    .. controls ++(210: 64) and ++(270:192) .. (48, -40);
}
\fill [DeepOrange900]
  (-40,-40) arc (180:360:40 and 16) arc (360:180:40 and 40);
\fill [DeepOrange300]
  (-32,108) circle [radius=16] (-40,160) circle [radius=12]
  (-20,196) circle [radius= 8]  ( 40,160) circle [radius=16]
  ( 64,120) circle [radius= 8]  ( 40,100) circle [radius=12];
\end{scope}
}
}
\newcommand{\tikznode}[2]{\tikz[remember picture,baseline=(#1.base),inner
 sep=0pt]{\node(#1)[inner sep=0pt]{#2};}}

\definecolor{purple11}{RGB}{51, 0, 102}
\definecolor{Ultra1}{RGB}{18, 10, 142}
\definecolor{SteelBlue}{RGB}{70,130,180}


\newcommand{\chapquote}[3]{\begin{quotation} \textcolor{SteelBlue}{\textsl{#1}} \end{quotation} \begin{flushright} - \textcolor{SteelBlue}{#2} \textit{#3}\end{flushright} }

%%% TITLE
\newcommand{\dylantitle}{\maketitle \titlepagedecoration \thispagestyle{empty}}

\usepackage[T1]{fontenc}
\usepackage{mathpazo}

%%% ARRAY
\usepackage{xparse}

\ExplSyntaxOn
\NewDocumentCommand{\storedata}{mm}
  {
   \bcp_store_data:nn { #1 } { #2 }
  }

\NewDocumentCommand{\appenddata}{mm}
 {
  \bcp_append_data:nn { #1 } { #2 }
 }

\NewExpandableDocumentCommand{\getdata}{O{1}m}
 {
  \bcp_get_data:nn { #1 } { #2 }
 }

\NewExpandableDocumentCommand{\getlength}{m}
 {
  \seq_count:c { l_bcp_data_#1_seq }
 }

\NewDocumentCommand{\removelast}{om}
 {
  \IfNoValueTF { #1 }
   {
    \bcp_remove_last:Nn \l_tmpa_tl { #2 }
   }
   {
    \bcp_remove_last:Nn #1 { #2 }
   }
 }

\cs_new_protected:Npn \bcp_store_data:nn #1 #2
 {
  % create the sequence if it doesn't exist or clear it if it exists
  \seq_clear_new:c { l_bcp_data_#1_seq }
  % append the items
  \__bcp_append_data:nn { #1 } { #2 }
 }

\cs_new_protected:Npn \bcp_append_data:nn #1 #2
 {
  % create the sequence if it doesn't exist, do nothing if it exists
  \seq_if_exist:cF { l_bcp_data_#1_seq }
   { \seq_new:c { l_bcp_data_#1_seq } }
  % append the items
  \__bcp_append_data:nn { #1 } { #2 }
 }

\cs_new_protected:Npn \__bcp_append_data:nn #1 #2
 {
  % append items one at a time
  \tl_map_inline:nn { #2 }
   {
    \seq_put_right:cn { l_bcp_data_#1_seq } { ##1 }
   }
 }

\cs_new:Npn \bcp_get_data:nn #1 #2
 {
  % retrieve the requested item
  \seq_item:cn { l_bcp_data_#2_seq } { #1 }
 }

\cs_new_protected:Nn \bcp_remove_last:Nn
 {
  \seq_pop_right:cN { l_bcp_data_#2_seq } #1
 }

\ExplSyntaxOff

\usepackage{tikz, tikz-cd, pgfplots} 
\usepgfplotslibrary{fillbetween}
\usetikzlibrary{arrows.meta,arrows,scopes,patterns,shapes.geometric,angles,quotes,intersections,calc}
\makeatletter
\tikzset{% https://tex.stackexchange.com/a/142491
  mirror/.code={\pgfutil@in@{--}{#1}\ifpgfutil@in@\tikz@trans@mirror#1\@nil
    \else\tikz@scan@one@point\pgftransformmirror#1\relax\fi},
  ymirror/.code={\pgfutil@ifnextchar(\tikz@trans@ymirror@coordinate\tikz@trans@ymirror@simple#1\@nil},
  xmirror/.code={\pgfutil@ifnextchar(\tikz@trans@xmirror@coordinate\tikz@trans@xmirror@simple#1\@nil}}
\def\tikz@trans@mirror#1--#2\@nil{%
  \pgfextract@process\pgf@trans@mirror@A{\tikz@scan@one@point\pgfutil@firstofone#1}%
  \pgfextract@process\pgf@trans@mirror@B{\tikz@scan@one@point\pgfutil@firstofone#2}%
  \pgftransformMirror{\pgf@trans@mirror@A}{\pgf@trans@mirror@B}}
\def\pgftransformxmirror#1{\pgfmathparse{2*(#1)}\pgftransformcm{-1}{0}{0}{1}{\pgfqpoint{+\pgfmathresult pt}{+0pt}}}
\def\pgftransformymirror#1{\pgfmathparse{2*(#1)}\pgftransformcm{1}{0}{0}{-1}{\pgfqpoint{+0pt}{+\pgfmathresult pt}}}
\def\tikz@trans@ymirror@simple#1\@nil{
  \pgfmathparse{#1}\let\tikz@temp\pgfmathresult
  \ifpgfmathunitsdeclared
    \pgftransformymirror{\tikz@temp pt}%
  \else
    \pgf@process{\pgfpointxy{0}{\tikz@temp}}%
    \pgftransformymirror{+\the\pgf@y}%
  \fi}
\def\tikz@trans@xmirror@simple#1\@nil{
  \pgfmathparse{#1}\let\tikz@temp\pgfmathresult
  \ifpgfmathunitsdeclared
    \pgftransformxmirror{\tikz@temp pt}%
  \else
    \pgf@process{\pgfpointxy{\tikz@temp}{0}}%
    \pgftransformxmirror{+\the\pgf@x}%
  \fi}
\def\tikz@trans@xmirror@coordinate#1\@nil{\tikz@scan@one@point\pgfutil@firstofone#1\pgftransformxmirror{+\the\pgf@x}}
\def\tikz@trans@ymirror@coordinate#1\@nil{\tikz@scan@one@point\pgfutil@firstofone#1\pgftransformymirror{+\the\pgf@y}}
\def\pgftransformmirror#1{%
  \pgfpointnormalised{#1}%
  \pgf@xa=\pgf@sys@tonumber\pgf@y\pgf@x
  \pgf@xb=\pgf@sys@tonumber\pgf@x\pgf@x
  \pgf@yb=\pgf@sys@tonumber\pgf@y\pgf@y
  \multiply\pgf@xa2\relax
  \pgf@xc=-\pgf@yb\advance\pgf@xc\pgf@xb
  \pgf@yc=-\pgf@xb\advance\pgf@yc\pgf@yb
  \edef\pgf@temp{{\the\pgf@xc}{+\the\pgf@xa}{+\the\pgf@xa}{+\the\pgf@yc}}%
  \expandafter\pgf@transformcm\pgf@temp{\pgfpointorigin}}
\def\pgftransformMirror#1#2{%
  \pgfextract@process\pgf@trans@mirror@A{#1}%
  \pgfextract@process\pgf@trans@mirror@B{#2}%
  \pgfextract@process\pgf@trans@mirror@g{\pgfpointdiff{\pgf@trans@mirror@A}{\pgf@trans@mirror@B}}%
  \pgftransformshift{\pgf@trans@mirror@A}%
  \pgftransformmirror{\pgf@trans@mirror@g}%
  \pgftransformshift{\pgfpointscale{-1}{\pgf@trans@mirror@A}}}
\makeatother

\pgfplotsset{every axis/.append style={
axis x line=middle,    % put the x axis in the middle
axis y line=middle,    % put the y axis in the middle
axis line style={<->}, % arrows on the axis
xlabel={$x$},          % default put x on x-axis
ylabel={$y$},          % default put y on y-axis
}}

\pgfplotsset{soldot/.style={color=black,only marks,mark=*},
 holdot/.style={color=black,fill=white,only marks,mark=*},
 compat=1.12}
 
\usepackage{float}
 
\ifdylanadidarkmode
\usepackage{pagecolor}
\hypersetup{urlcolor=Cyan,linkcolor=red,citecolor=SkyBlue2}

\pagecolor{black} %black

\color[rgb]{1,1,1} %white

\begin{asydef}
	defaultpen(white);
\end{asydef}
\fi

%%% QUICK NOTES %%%
\newcommand{\iiimain}[3]{
\def\inpone{#1}
\def\inptwo{#2}
\def\keywordx{normal}
\def\keywordy{style}
\def\colorred{red}
\def\colorblue{blue}
\def\colorforestgreen{ForestGreen}
\ifx\inpone\keywordx
\item
\else
\ifx\inpone\keywordy
\ifx\inptwo\colorred
\item[\refstepcounter{enumi}\color{\colorred}\textbf{\textsf{Definition \theenumi.}}]
\else
\ifx\inptwo\colorblue
\item[\refstepcounter{enumi}\color{\colorblue}\textbf{\textsf{Theorem \theenumi.}}]
\else
\ifx\inptwo\colorforestgreen
\item[\refstepcounter{enumi}\color{\colorforestgreen}\textbf{\textsf{Example \theenumi.}}]
\else
\item[\refstepcounter{enumi}\textbf{\textsf{Problem \theenumi.}}]
\fi
\fi
\fi
\else
\item[\refstepcounter{enumi}\fcolorbox{#2}{#3}{\color{#2} \textbf{\protect\threedigits{\theenumi}}}]
\fi
}

\newcommand{\iii}[1][black]{
\iiimain{style}{#1}{#1!20}
}

\newcommand{\rii}{
\iii[red]
}
\newcommand{\gii}{
\iii[ForestGreen]
}
\newcommand{\bii}{
\iii[blue]
}

\newcommand{\dii}{\rii}
\newcommand{\tii}{\bii}
\newcommand{\eii}{\gii}
\newcommand{\pii}{\iii[black]}

\newenvironment{infobox}{%
\begin{enumerate}[wide,labelwidth=!,labelindent=0pt]
}{\end{enumerate}}
